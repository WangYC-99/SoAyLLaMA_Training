{"Query_en": "Research interests of Jagdish Ramakrishnan at Facebook", "Answer": ["Split-course Radiotherapy", "Anomaly Detection", "Temporal Optimization", "Optimal Fractionation", "Tumor Shrinkage", "Adaptive Radiation", "Optimization", "Medical Imaging", "Tissues", "Radiation Treatment"], "route": "searchPerson", "code": "info = {'name': 'Jagdish Ramakrishnan', 'organization': 'Facebook'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ninterests = target_person_info['interests']\nfinal_result = interests\n", "result": ["Split-course Radiotherapy", "Anomaly Detection", "Temporal Optimization", "Optimal Fractionation", "Tumor Shrinkage", "Adaptive Radiation", "Optimization", "Medical Imaging", "Tissues", "Radiation Treatment"], "exe_time": 1.203291654586792}
{"Query_en": "Citation count of Yuta Saito at Cornell University", "Answer": 464, "route": "searchPerson", "code": "info = {'name': 'Yuta Saito', 'organization': 'Cornell University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\nnum_citation = target_person_info['num_citation']\nfinal_result = num_citation\n", "result": 464, "exe_time": 1.2564799785614014}
{"Query_en": "Number of published papers by Peng Han at Computer Science, King Abdullah University of Science and Technology", "Answer": 45, "route": "searchPerson", "code": "info = {'name': 'Peng Han', 'organization': 'Computer Science, King Abdullah University of Science and Technology'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\nnum_pubs = target_person_info['num_pubs']\nfinal_result = num_pubs\n", "result": 45, "exe_time": 1.3308312892913818}
{"Query_en": "Which institution does Tim Paek who researches in Tim Paek field belong to?", "Answer": "Apple Inc", "route": "searchPerson", "code": "info = {'name': 'Tim Paek', 'interest': 'Tim Paek'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\norganization = target_person_info['organization']\nfinal_result = organization\n", "result": "Apple Inc", "exe_time": 1.142397165298462}
{"Query_en": "Citation count of Susan F. Martin who researches in Forced Migration field", "Answer": 195, "route": "searchPerson", "code": "info = {'name': 'Susan F. Martin', 'interest': 'Forced Migration'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\nnum_citation = target_person_info['num_citation']\nfinal_result = num_citation\n", "result": 195, "exe_time": 1.2648558616638184}
{"Query_en": "Number of papers published by Brian Hu Zhang who researches in Game Theory And Economic Paradigms (gtep) field", "Answer": 12, "route": "searchPerson", "code": "info = {'name': 'Brian Hu Zhang', 'interest': 'Game Theory And Economic Paradigms (gtep)'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\nnum_pubs = target_person_info['num_pubs']\nfinal_result = num_pubs\n", "result": 12, "exe_time": 1.352630376815796}
{"Query_en": "Who are the researchers at Adobe Inc?", "Answer": ["Balaji Krishnamurthy"], "route": "searchPerson", "code": "info = {'organization': 'Adobe Inc'}\norganization = info['organization']\n\nperson_list = searchPerson(organization = organization)\nname_list = [person_list[i]['name'] for i in range(len(person_list))]\nfinal_result = name_list\n", "result": ["Balaji Krishnamurthy"], "exe_time": 0.9503490924835205}
{"Query_en": "Who are the researchers in Generalized Tensor Trace Norm field?", "Answer": ["Yi Zhang"], "route": "searchPerson", "code": "info = {'interest': 'Generalized Tensor Trace Norm'}\ninterest = info['interest']\n\nperson_list = searchPerson(interest = interest)\nname_list = [person_list[i]['name'] for i in range(len(person_list))]\nfinal_result = name_list\n", "result": ["Yi Zhang"], "exe_time": 0.9831159114837646}
{"Query_en": "Who are the collaborators of Chee-Kong Lee at Tencent America?", "Answer": ["Qi Liu", "Zaixi Zhang", "Enhong Chen", "Zhenya Huang", "Hao Wang", "Jiezhong Qiu"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Chee-Kong Lee', 'organization': 'Tencent America'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ncoauthors_list = getCoauthors(person_id = target_person_id)\ncoauthors_name_list = [coauthor['name'] for coauthor in coauthors_list]\nfinal_result = coauthors_name_list\n", "result": ["Qi Liu", "Zaixi Zhang", "Enhong Chen", "Zhenya Huang", "Hao Wang", "Jiezhong Qiu"], "exe_time": 1.8866024017333984}
{"Query_en": "Who are the collaborators of Wei Wang in Bandwidth field?", "Answer": ["Meihui Zhang", "Feng Yan", "Bo Li", "Jingren Zhou", "Guoliang Li", "Wei Lin", "Jinyang Gao", "Yong Li", "Gong Zhang", "Di Niu"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Wei Wang', 'interest': 'Bandwidth'}\ninterest = info['interest']\nname = info['name']\n\ninterest_person_list = searchPerson(interest = interest)\ninterest_person_id_list = [person['person_id'] for person in interest_person_list]\ntarget_list = []\nfor interest_person_id in interest_person_id_list:\n    coauthors = getCoauthors(person_id = interest_person_id)\n    coauthor_name_list = [coauthor['name'] for coauthor in coauthors]\n    if name in coauthor_name_list:\n        target_list.append(getPersonBasicInfo(person_id=interest_person_id)['name'])\nfinal_result = target_list\n", "result": "exe error", "exe_time": 2.4042253494262695}
{"Query_en": "Who at Facebook has a collaboration with Yiqun Liu?", "Answer": ["Omkar M. Parkhi"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Yiqun Liu', 'organization': 'Facebook'}\norganization = info['organization']\nname = info['name']\n\norganization_person_list = searchPerson(organization = organization)\norganization_person_id_list = [person['person_id'] for person in organization_person_list]\ntarget_list = []\nfor interest_person_id in organization_person_id_list:\n    coauthors = getCoauthors(person_id = interest_person_id)\n    coauthor_name_list = [coauthor['name'] for coauthor in coauthors]\n    if name in coauthor_name_list:\n        target_list.append(getPersonBasicInfo(person_id=interest_person_id)['name'])\nfinal_result = target_list\n", "result": ["Omkar M. Parkhi"], "exe_time": 2.413163900375366}
{"Query_en": "Who in Matrix Factorization field has a collaboration with Steffen Rendle?", "Answer": ["Yehuda Koren"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Steffen Rendle', 'interest': 'Matrix Factorization'}\ninterest = info['interest']\nname = info['name']\n\ninterest_person_list = searchPerson(interest = interest)\ninterest_person_id_list = [person['person_id'] for person in interest_person_list]\ntarget_list = []\nfor interest_person_id in interest_person_id_list:\n    coauthors = getCoauthors(person_id = interest_person_id)\n    coauthor_name_list = [coauthor['name'] for coauthor in coauthors]\n    if name in coauthor_name_list:\n        target_list.append(getPersonBasicInfo(person_id=interest_person_id)['name'])\nfinal_result = target_list\n", "result": ["Yehuda Koren"], "exe_time": 2.437411069869995}
{"Query_en": "What are the papers published by Dawei Gao at Data Analytics and Intelligence Lab, Alibaba DAMO Academy?", "Answer": ["Top-Kappa Team Recommendation In Spatial Crowdsourcing", "Rethinking Pruning for Accelerating Deep Inference At the Edge", "Team-Oriented Task Planning In Spatial Crowdsourcing", "Pruning-Aware Merging for Efficient Multitask Inference", "Pruning Meta-Trained Networks for On-Device Adaptation", "Do Emergent Abilities Exist in Quantized Large Language Models: An\n  Empirical Study", "Finding Meta Winning Ticket to Train Your MAML"], "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Dawei Gao', 'organization': 'Data Analytics and Intelligence Lab, Alibaba DAMO Academy'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\npublications_list = getPersonPubs(person_id = target_person_id)\npublications_title_list = [publication['title'] for publication in publications_list]\nfinal_result = publications_title_list\n", "result": ["Top-Kappa Team Recommendation In Spatial Crowdsourcing", "Rethinking Pruning for Accelerating Deep Inference At the Edge", "Team-Oriented Task Planning In Spatial Crowdsourcing", "Pruning-Aware Merging for Efficient Multitask Inference", "Pruning Meta-Trained Networks for On-Device Adaptation", "Do Emergent Abilities Exist in Quantized Large Language Models: An\n  Empirical Study", "Finding Meta Winning Ticket to Train Your MAML"], "exe_time": 1.9250173568725586}
{"Query_en": "What is the citation count of the representative work of Paul Weng at University of Michigan-Shanghai Jiao Tong University Joint Institute?", "Answer": 554, "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Paul Weng', 'organization': 'University of Michigan-Shanghai Jiao Tong University Joint Institute'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\ntarget_num_citation = target_publication_dict['num_citation']\nfinal_result = target_num_citation\n", "result": 554, "exe_time": 2.224858522415161}
{"Query_en": "In which year was the representative work of Chul-Ho Lee at Florida Institute of Technology published?", "Answer": 2021, "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Chul-Ho Lee', 'organization': 'Florida Institute of Technology'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\npublications_list = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\nmax_citation = publications_list[0]\nfinal_result = max_citation['year']\n", "result": 2021, "exe_time": 1.8543589115142822}
{"Query_en": "Who are the authors of the representative work of Wei Wen at Facebook AI?", "Answer": ["Wen, Wei", "Wu, Chunpeng", "Wang, Yandan", "Chen, Yiran", "Li, Hai"], "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Wei Wen', 'organization': 'Facebook AI'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\npublications_list = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\nmax_citation = publications_list[0]\nfinal_result = max_citation['year']\n", "result": 2016, "exe_time": 1.8057339191436768}
{"Query_en": "What are the papers published by Yu-An Chung in Self-supervised Learning field?", "Answer": ["An Unsupervised Autoregressive Model for Speech Representation Learning.", "w2v-BERT: Combining Contrastive Learning and Masked Language Modeling for Self-Supervised Speech Pre-Training", "Audio Word2vec: Unsupervised Learning Of Audio Segment Representations Using Sequence-To-Sequence Autoencoder", "Semi-Supervised Training For Improving Data Efficiency In End-To-End Speech Synthesis", "Disentangling Correlated Speaker And Noise For Speech Synthesis Via Data Augmentation And Adversarial Factorization", "Unsupervised Cross-Modal Alignment of Speech and Text Embedding Spaces.", "Cost-Aware Pre-Training for Multiclass Cost-Sensitive Deep Learning.", "Towards Unsupervised Speech-To-Text Translation", "Unsupervised Clinical Language Translation.", "libact: Pool-based Active Learning in Python."], "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Yu-An Chung', 'interest': 'Self-supervised Learning'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name=name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\npublications_list = getPersonPubs(person_id = target_person_id)\npublications_title_list = [publication['title'] for publication in publications_list]\nfinal_result = publications_title_list\n", "result": ["An Unsupervised Autoregressive Model for Speech Representation Learning.", "w2v-BERT: Combining Contrastive Learning and Masked Language Modeling for Self-Supervised Speech Pre-Training", "Audio Word2vec: Unsupervised Learning Of Audio Segment Representations Using Sequence-To-Sequence Autoencoder", "Semi-Supervised Training For Improving Data Efficiency In End-To-End Speech Synthesis", "Disentangling Correlated Speaker And Noise For Speech Synthesis Via Data Augmentation And Adversarial Factorization", "Unsupervised Cross-Modal Alignment of Speech and Text Embedding Spaces.", "Cost-Aware Pre-Training for Multiclass Cost-Sensitive Deep Learning.", "Towards Unsupervised Speech-To-Text Translation", "Unsupervised Clinical Language Translation.", "libact: Pool-based Active Learning in Python."], "exe_time": 1.8154795169830322}
{"Query_en": "What is the citation count of the representative work of Zhijie Deng in Adversarial Training field?", "Answer": 368, "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Zhijie Deng', 'interest': 'Adversarial Training'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\ntarget_num_citation = target_publication_dict['num_citation']\nfinal_result = target_num_citation\n", "result": 368, "exe_time": 2.1295158863067627}
{"Query_en": "In which year was the representative work of Matt Deitke in Open Simulation-to-real Embodied Ai field published?", "Answer": 2020, "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Matt Deitke', 'interest': 'Open Simulation-to-real Embodied Ai'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name=name, interest=interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\nperson_pubs = getPersonPubs(person_id=target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = person_pubs[0]\npublication_year = target_publication_dict['year']\nfinal_result = publication_year\n", "result": 2020, "exe_time": 2.079941749572754}
{"Query_en": "Who are the authors of the representative work of Lin Yang in Online Bidding Strategy Design field?", "Answer": ["Lin Yang", "Lei Deng", "Mohammad Hassan Hajiesmaili", "Cheng Tan", "Wing Shing Wong"], "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Lin Yang', 'interest': 'Online Bidding Strategy Design'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\nauthor_name_list = target_publication_dict['authors_name_list']\nfinal_result = author_name_list\n", "result": ["Lin Yang", "Lei Deng", "Mohammad Hassan Hajiesmaili", "Cheng Tan", "Wing Shing Wong"], "exe_time": 2.130276918411255}
{"Query_en": "Is Vipin Kumar at Department of Computer Science and Engineering, College of Science and Engineering, University of Minnesota male or female?", "Answer": "male", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Vipin Kumar', 'organization': 'Department of Computer Science and Engineering, College of Science and Engineering, University of Minnesota'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_gender = target_person_basic_info['gender']\nfinal_result = target_person_gender\n", "result": "male", "exe_time": 1.9509975910186768}
{"Query_en": "What is the title of Yang Li at Google Research?", "Answer": "Senior Staff Research Scientist", "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Yang Li', 'organization': 'Google Research'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_title = target_publication_dict['title']\nfinal_result = target_publication_title\n", "result": "Gestures without libraries, toolkits or training: a $1 recognizer for user interface prototypes", "exe_time": 2.0359573364257812}
{"Query_en": "What is the introduction of Siwei Wang at National University of Defense Technology?", "Answer": "I'm a researcher of machine learning and data mining, especially on optimization theory, multi-view clustering and deep clustering. Currently, I focus on the following research topics:<br>Multi-view clustering/fusion<br>Large-scale Graph Learning<br>Optimization theory on Riemannian Manifold<br>Deep clustering with Optimal Transport (OT) / Mutual Information (MI)<br>UAV study", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Siwei Wang', 'organization': 'National University of Defense Technology'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_bio = target_person_basic_info['bio']\nfinal_result = target_person_bio\n", "result": "I'm a researcher of machine learning and data mining, especially on optimization theory, multi-view clustering and deep clustering. Currently, I focus on the following research topics:<br>Multi-view clustering/fusion<br>Large-scale Graph Learning<br>Optimization theory on Riemannian Manifold<br>Deep clustering with Optimal Transport (OT) / Mutual Information (MI)<br>UAV study", "exe_time": 1.7841668128967285}
{"Query_en": "What is the educational background of Weilin Cong at The School of Electrical Engineering and Computer Science, College of Engineering, The Pennsylvania State University?", "Answer": "Aug 2020-2023 Penn State University Doctor of Philosophy - PhD, Computer Science<br><br>Aug 2017 - Aug 2020 Penn State University Master of Science - MS, Computer Science<br><br>Sep 2013 - Jun 2017 Beijing Institute of Technology Bachelor's degree, Computer Science<br><br>Jul 2017-Present Penn State University Student", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Weilin Cong', 'organization': 'The School of Electrical Engineering and Computer Science, College of Engineering, The Pennsylvania State University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_education_experience = target_person_basic_info['education_experience']\nfinal_result = target_person_education_experience\n", "result": "Aug 2020-2023 Penn State University Doctor of Philosophy - PhD, Computer Science<br><br>Aug 2017 - Aug 2020 Penn State University Master of Science - MS, Computer Science<br><br>Sep 2013 - Jun 2017 Beijing Institute of Technology Bachelor's degree, Computer Science<br><br>Jul 2017-Present Penn State University Student", "exe_time": 2.1321661472320557}
{"Query_en": "What is the email of Gokul Swamy at The Robotics Institute, School of Computer Science, Carnegie Mellon University?", "Answer": "gswamy@cmu.edu;gswamy@andrew.cmu.edu", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Gokul Swamy', 'organization': 'The Robotics Institute, School of Computer Science, Carnegie Mellon University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_email = target_person_basic_info['email']\nfinal_result = target_person_email\n", "result": "gswamy@cmu.edu;gswamy@andrew.cmu.edu", "exe_time": 1.9488987922668457}
{"Query_en": "Is Hongke Zhao in P2p Lending field male or female?", "Answer": "male", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Hongke Zhao', 'interest': 'P2p Lending'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_gender = target_person_basic_info['gender']\nfinal_result = target_person_gender\n", "result": "male", "exe_time": 1.8064630031585693}
{"Query_en": "What is the title of Matt Jordan in Polyhedral Complex field?", "Answer": "Graduate Research Assistant", "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Matt Jordan', 'interest': 'Polyhedral Complex'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\ntarget_title = target_publication_dict['title']\nfinal_result = target_title\n", "result": "Exactly Computing the Local Lipschitz Constant of ReLU Networks", "exe_time": 1.9978973865509033}
{"Query_en": "What is the introduction of Mohammad Al Hasan in Data Mining field?", "Answer": "I am an Assistant Professor at IUPUI CS. Graph Mining is my core research interest. But, I am broadly interested in data mining, bioinformatics, biomedical informatics, machine learning, information retrieval and social network analysis. I got my PhD from the Computer Science department at RPI. Here is a copy of my PhD dissertation, which won SIGKDD Doctoral Dissertation Award for the year of 2010. Until August 2010, I was a senior research scientist at eBay Research Labs, San Jose, CA. Earlier, I obtained an MS degree from the Department of Computer Science at the University of Minnesota, Twin Cities and a BS degree from BUET.", "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Mohammad Al Hasan', 'interest': 'Data Mining'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_abstract = target_publication_info['abstract']\nfinal_result = target_abstract\n", "result": "Social network analysis has attracted much attention in re- cent years. Link prediction is a key research direction within this area. In this paper, we study link prediction as a su- pervised learning task. Along the way, we identify a set of features that are key to the performance under the super- vised learning setup. The identied features are very easy to compute, and at the same time surprisingly eectiv e in solv- ing the link prediction problem. We also explain the eec- tiveness of the features from their class density distribution. Then we compare dieren t classes of supervised learning al- gorithms in terms of their prediction performance using var- ious performance metrics, such as accuracy, precision-recall, F-values, squared error etc. with a 5-fold cross validation. Our results on two practical social network datasets shows that most of the well-known classication algorithms (deci- sion tree, k-NN, multilayer perceptron, SVM, RBF network) can predict links with comparable performances, but SVM outperforms all of them with narrow margin in all perfor- mance measures. Again, ranking of features with popular feature ranking algorithms shows that a small subset of fea- tures always plays a signican t role in link prediction.", "exe_time": 2.438800096511841}
{"Query_en": "What is the educational background of Reynold C.K. Cheng in Uncertain Data field?", "Answer": "Purdue University West Lafayette, Indiana, USA Ph.D., Computer Science, 2001-08-15 to 2005-05-31<br>Purdue University West Lafayette, Indiana, USA M.S., Computer Science, Sep 2001 - Dec 2003 <br>University of Hong Kong Hong Kong, China M.Phil., Computer Science, Sep 1998 - Sep 2000<br>University of Hong Kong Hong Kong, China B. Eng., Computer Engineering, Sep 1995 - Jun 1998 (1st Class Honor)", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Reynold C.K. Cheng', 'interest': 'Uncertain Data'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_education_experience = target_person_basic_info['education_experience']\nfinal_result = target_person_education_experience\n", "result": "Purdue University West Lafayette, Indiana, USA Ph.D., Computer Science, 2001-08-15 to 2005-05-31<br>Purdue University West Lafayette, Indiana, USA M.S., Computer Science, Sep 2001 - Dec 2003 <br>University of Hong Kong Hong Kong, China M.Phil., Computer Science, Sep 1998 - Sep 2000<br>University of Hong Kong Hong Kong, China B. Eng., Computer Engineering, Sep 1995 - Jun 1998 (1st Class Honor)", "exe_time": 2.023001194000244}
{"Query_en": "What is the email of Chuizheng Meng in Mortality Prediction field?", "Answer": "chuizhem@usc.edu", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Chuizheng Meng', 'interest': 'Mortality Prediction'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_email = target_person_basic_info['email']\nfinal_result = target_person_email\n", "result": "chuizhem@usc.edu", "exe_time": 1.8213250637054443}
{"Query_en": "Who among the collaborators of Fanjin Zhang at Tsinghua University are researching in Big Data field?", "Answer": ["Xiaotao Gu"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Fanjin Zhang', 'organization': 'Tsinghua University'}\nname = info['name']\norganization = info['organization']\ntarget_interest = info['interest']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ncoauthors_list = getCoauthors(person_id = target_person_id)\n\ntarget_coauthors_names = []\nfor coauthor in coauthors_list:\n    coauthor_id = coauthor['person_id']\n    coauthor_interests_list = getPersonInterest(person_id = coauthor_id)\n    if target_interest in coauthor_interests_list:\n        target_coauthors_names.append(coauthor['name'])\n\nfinal_result = target_coauthors_names\n", "result": "exe error", "exe_time": 2.7849409580230713}
{"Query_en": "Who has the highest citation count among the collaborators of Yuhan Wu at School of Computer Science, Peking University?", "Answer": "Bin Cui", "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Yuhan Wu', 'organization': 'School of Computer Science, Peking University'}\nname = info['name']\norganization = info['organization']\n\n# Search the person\nperson_list = searchPerson(name=name, organization=organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\n\n# Get the coauthors\ncoauthors_list = getCoauthors(person_id=target_person_id)\n\n# get information of coauthors and find the one with highest citation\nmax_citation = 0\nmax_citation_author_name = ''\n\nfor coauthor in coauthors_list:\n    coauthor_name = coauthor['name']\n    coauthor_info_list = searchPerson(name = coauthor_name)\n    coauthor_info = coauthor_info_list[0]\n    coauthor_citation = coauthor_info['num_citation']\n    if coauthor_citation > max_citation:\n        max_citation = coauthor_citation\n        max_citation_author_name = coauthor_info['name']\n\nfinal_result = max_citation_author_name\n", "result": "Bin Cui", "exe_time": 3.623028039932251}
{"Query_en": "Who has the most published papers among the collaborators of Ziyang Wu at Cornell University?", "Answer": "Madeleine Udell", "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Ziyang Wu', 'organization': 'Cornell University'}\nname = info['name']\norganization = info['organization']\n\n# Search the person\nperson_list = searchPerson(name=name, organization=organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\n\n# Get the coauthors\ncoauthors_list = getCoauthors(person_id=target_person_id)\n\n# get information of coauthors and find the one with highest citation\nmax_pubs = 0\nmax_pubs_author_name = ''\n\n# Iterate each coauthor and calculate his/her publication number\nfor coauthor in coauthors_list:\n    coauthor_name = coauthor['name']\n    coauthor_info_list = searchPerson(name = coauthor_name)\n    coauthor_info = coauthor_info_list[0]\n    coauthor_pubs = coauthor_info['num_pubs']\n    if coauthor_pubs > max_pubs:\n        max_pubs = coauthor_pubs\n        max_pubs_author_name = coauthor_info['name']\n\nfinal_result = max_pubs_author_name\n", "result": "Madeleine Udell", "exe_time": 3.7364652156829834}
{"Query_en": "Who among the collaborators of Chao Ma in Energy Efficiency field are at Baidu Inc.institution?", "Answer": ["Jingshuai Zhang"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Chao Ma', 'interest': 'Energy Efficiency'}\ninterest = info['interest']\nname = info['name']\n\ninterest_person_list = searchPerson(interest = interest)\ninterest_person_id_list = [person['person_id'] for person in interest_person_list]\ntarget_list = []\nfor interest_person_id in interest_person_id_list:\n    coauthors = getCoauthors(person_id = interest_person_id)\n    coauthor_name_list = [coauthor['name'] for coauthor in coauthors]\n    if name in coauthor_name_list:\n        target_list.append(getPersonBasicInfo(person_id=interest_person_id)['name'])\nfinal_result = target_list\n", "result": "exe error", "exe_time": 2.435288429260254}
{"Query_en": "Who has the highest citation count among the collaborators of Mengdi Wang in Hyperspectral Image field?", "Answer": "Danai Koutra", "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Mengdi Wang', 'interest': 'Hyperspectral Image'}\nname = info['name']\ninterest = info['interest']\n\n# get specific person's information\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\n\n# Get the coauthors\ncoauthors_list = getCoauthors(person_id=target_person_id)\n\n# get information of coauthors and find the one with highest citation\nmax_citation = 0\nmax_citation_author_name = ''\n\nfor coauthor in coauthors_list:\n    coauthor_name = coauthor['name']\n    coauthor_info_list = searchPerson(name = coauthor_name)\n    coauthor_info = coauthor_info_list[0]\n    coauthor_citation = coauthor_info['num_citation']\n    if coauthor_citation > max_citation:\n        max_citation = coauthor_citation\n        max_citation_author_name = coauthor_info['name']\n\nfinal_result = max_citation_author_name\n", "result": "Danai Koutra", "exe_time": 3.605072498321533}
{"Query_en": "Who has the most published papers among the collaborators of Yu-Chia Chen in Causal Impact field?", "Answer": "Juan Lavista Ferres", "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Yu-Chia Chen', 'interest': 'Causal Impact'}\nname = info['name']\ninterest = info['interest']\n\n# get specific person's information\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\n\n# Get the coauthors\ncoauthors_list = getCoauthors(person_id=target_person_id)\n\n# get information of coauthors and find the one with highest citation\nmax_pubs = 0\nmax_pubs_author_name = ''\n\n# Iterate each coauthor and calculate his/her publication number\nfor coauthor in coauthors_list:\n    coauthor_name = coauthor['name']\n    coauthor_info_list = searchPerson(name = coauthor_name)\n    coauthor_info = coauthor_info_list[0]\n    coauthor_pubs = coauthor_info['num_pubs']\n    if coauthor_pubs > max_pubs:\n        max_pubs = coauthor_pubs\n        max_pubs_author_name = coauthor_info['name']\n\nfinal_result = max_pubs_author_name\n", "result": "Juan Lavista Ferres", "exe_time": 3.783216953277588}
{"Query_en": "Who are the collaborators of the collaborators of Manish Gupta at Microsoft?", "Answer": ["Xifeng Yan", "Yizhou Sun", "Philip S. Yu", "Jian Pei", "Jing Gao", "Xiang Ren", "Chi Wang", "Johannes Fürnkranz", "Chao Zhang", "Kai Ming Ting", "Katharina Morik", "Jingbo Shang", "Yu Zhang", "Hong Cheng", "Deng Cai", "Carl Yang", "Jiawei Han", "Yaliang Li", "Fenglong Ma", "Lu Su", "Aidong Zhang", "Yaqing Wang", "Qi Li (Quinn)", "Houping Xiao", "Nan Du", "Latifur R. Khan", "Liuyi Yao", "Bo Zhao", "Manish Gupta", "Mengdi Huai", "Philip S. Yu", "Haoyu Wang", "Yizhou Sun", "Qiuling Suo", "Chuishi Meng", "Sheng Li", "Sihong Xie", "Bolin Ding", "Charu C. Aggarwal", "Subhabrata Mukherjee", "Pang-Ning Tan", "Guangxu Xun", "Hongzhi Wang", "Jiawei Han", "Wei Wang", "Yunsheng Bai", "Ting Chen", "Ziniu Hu", "Kai-Wei Chang", "Song Jiang", "Philip S. Yu", "Xifeng Yan", "Zijie Huang", "Manish Gupta", "Jing Gao", "Hongzhi Yin", "Hao Ding", "Xiang Ren", "Roshni G. Iyer (Roshni Iyer)", "Jie Tang", "Junheng Hao", "Chi Wang", "Haoyan Xu", "Kuansan Wang", "Quanquan Gu", "Lu-An Tang", "Shichang Zhang", "Muhao Chen", "Kewei Cheng", "Ling Chen", "Nitesh Chawla", "Charu C. Aggarwal", "Yuxiao Dong", "Philip S. Yu", "Jiawei Han", "Jiliang Tang", "Suhang Wang", "Jianyong Wang", "Huan Liu", "Latifur R. Khan", "Saket Sathe", "Yao Ma", "Xiaorui Liu", "Manish Gupta", "Srinivasan Parthasarathy", "Wei Wang", "Jiawei Zhang", "Jing Gao", "Mohammed Javeed Zaki", "Shiyu Chang", "Yanjie Fu", "Jaideep Srivastava", "Wenchao Yu", "Peixiang Zhao", "Xianfeng Tang", "Yizhou Sun", "Xiangnan Kong", "Liang Zhao", "Lingfei Wu (Teddy)", "Hao Peng", "Sunita Sarawagi", "Abir De", "Tanmoy Chakraborty", "Andrew Tomkins", "Rajdeep Sarkar", "Manish Gupta", "Alekh Agarwal", "Jon M. Kleinberg", "Jiawei Han", "Baoxu Shi", "Yizhou Sun", "Chi Wang", "Manish Gupta", "Neil Shah", "Meng Jiang", "Lidan Wang", "Shobeir Fakhraei", "Juanzi Li", "Yuxiao Dong", "Jing Zhang", "Ming Ding", "Jiezhong Qiu", "Hongxia Yang", "Xiao Liu", "Yukuo Cen", "Ying Ding", "Jimeng Sun", "Chang Zhou", "Kuansan Wang", "Hanghang Tong", "Zhengxiao Du", "Bo Chen", "Jifan Yu", "Xu Zou", "Nitesh Chawla", "Fanjin Zhang", "Zhiyuan Liu", "Michalis Vazirgiannis", "Philip S. Yu", "Zhenyu Hou", "Jingren Zhou", "Xiao Liu（Tracy Xiao Liu）"], "route": "searchPerson -> getCoauthors -> getCoauthors", "code": "info = {'name': 'Manish Gupta', 'organization': 'Microsoft'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ncoauthors1_list = getCoauthors(person_id = target_person_id)\n\ncoauthors2_list = []\nfor coauthor in coauthors1_list:\n    coauthors2_list.extend(getCoauthors(person_id = coauthor['person_id']))\n\ncoauthors2_names = [coauthor['name'] for coauthor in coauthors2_list]\n\nfinal_result = coauthors2_names\n", "result": ["Xifeng Yan", "Yizhou Sun", "Philip S. Yu", "Jian Pei", "Jing Gao", "Xiang Ren", "Chi Wang", "Johannes Fürnkranz", "Chao Zhang", "Kai Ming Ting", "Katharina Morik", "Jingbo Shang", "Yu Zhang", "Hong Cheng", "Deng Cai", "Carl Yang", "Jiawei Han", "Yaliang Li", "Fenglong Ma", "Lu Su", "Aidong Zhang", "Yaqing Wang", "Qi Li (Quinn)", "Houping Xiao", "Nan Du", "Latifur R. Khan", "Liuyi Yao", "Bo Zhao", "Manish Gupta", "Mengdi Huai", "Philip S. Yu", "Haoyu Wang", "Yizhou Sun", "Qiuling Suo", "Chuishi Meng", "Sheng Li", "Sihong Xie", "Bolin Ding", "Charu C. Aggarwal", "Subhabrata Mukherjee", "Pang-Ning Tan", "Guangxu Xun", "Hongzhi Wang", "Jiawei Han", "Wei Wang", "Yunsheng Bai", "Ting Chen", "Ziniu Hu", "Kai-Wei Chang", "Song Jiang", "Philip S. Yu", "Xifeng Yan", "Zijie Huang", "Manish Gupta", "Jing Gao", "Hongzhi Yin", "Hao Ding", "Xiang Ren", "Roshni G. Iyer (Roshni Iyer)", "Jie Tang", "Junheng Hao", "Chi Wang", "Haoyan Xu", "Kuansan Wang", "Quanquan Gu", "Lu-An Tang", "Shichang Zhang", "Muhao Chen", "Kewei Cheng", "Ling Chen", "Nitesh Chawla", "Charu C. Aggarwal", "Yuxiao Dong", "Philip S. Yu", "Jiawei Han", "Jiliang Tang", "Suhang Wang", "Jianyong Wang", "Huan Liu", "Latifur R. Khan", "Saket Sathe", "Yao Ma", "Xiaorui Liu", "Manish Gupta", "Srinivasan Parthasarathy", "Wei Wang", "Jiawei Zhang", "Jing Gao", "Mohammed Javeed Zaki", "Shiyu Chang", "Yanjie Fu", "Jaideep Srivastava", "Wenchao Yu", "Peixiang Zhao", "Xianfeng Tang", "Yizhou Sun", "Xiangnan Kong", "Liang Zhao", "Lingfei Wu (Teddy)", "Hao Peng", "Sunita Sarawagi", "Abir De", "Tanmoy Chakraborty", "Andrew Tomkins", "Rajdeep Sarkar", "Manish Gupta", "Alekh Agarwal", "Jon M. Kleinberg", "Jiawei Han", "Baoxu Shi", "Yizhou Sun", "Chi Wang", "Manish Gupta", "Neil Shah", "Meng Jiang", "Lidan Wang", "Shobeir Fakhraei", "Juanzi Li", "Yuxiao Dong", "Jing Zhang", "Ming Ding", "Jiezhong Qiu", "Hongxia Yang", "Xiao Liu", "Yukuo Cen", "Ying Ding", "Jimeng Sun", "Chang Zhou", "Kuansan Wang", "Hanghang Tong", "Zhengxiao Du", "Bo Chen", "Jifan Yu", "Xu Zou", "Nitesh Chawla", "Fanjin Zhang", "Zhiyuan Liu", "Michalis Vazirgiannis", "Philip S. Yu", "Zhenyu Hou", "Jingren Zhou", "Xiao Liu（Tracy Xiao Liu）"], "exe_time": 2.456749677658081}
{"Query_en": "Who are the collaborators of the collaborators of Manuel Gomez Rodriguez in Social Networks field?", "Answer": ["Manuel Gomez Rodriguez", "Soumen Chakrabarti", "Vinayak Gupta", "Sunita Sarawagi", "Indradyumna Roy", "Lars Lorch", "Krishnateja Killamsetty", "Vahid Balazadeh", "Abhijnan Chakraborty", "Muhammad Bilal Zafar", "Meeyoung Cha", "Manuel Gomez Rodriguez", "Asia J. Biega", "Hoda Heidari", "Aidong Zhang", "Yaliang Li", "Jing Gao", "Chenwei Zhang", "Kai Lei", "Philip S. Yu", "Andrew M. Dai", "Zhifeng Chen", "Manuel Gomez Rodriguez", "Yanqi Zhou", "Xiaowei Jia", "Maria Florina Balcan", "Fenglong Ma", "Quoc Viet Le", "Denny Zhou", "Jason Wei", "Marinka Zitnik", "Zhitao Ying", "Christos Faloutsos", "Jiaxuan You", "Jon M. Kleinberg", "Hongyu Ren", "Srijan Kumar", "Weihua Hu", "Jaewon Yang", "Michihiro Yasunaga", "Carlos Guestrin", "Hongwei Wang", "Tailin Wu", "Marko Grobelnik", "Andreas Krause", "Manuel Gomez Rodriguez", "Austin Reilley Benson", "Xikun Zhang", "Xiang Ren", "Krishna P. Gummadi", "Manuel Gomez Rodriguez", "Krishnaram Kenthapadi", "Carlos Guestrin", "Ilija Bogunovic", "Mojmir Mutný", "Eric Joel Horvitz", "Jure Leskovec", "Anupam Gupta", "Hoda Heidari", "Parnian Kassraie", "Manuel Gomez Rodriguez", "Manuel Gomez Rodriguez", "Andreas Krause", "Abir De", "Wanqian Yang", "Manuel Gomez Rodriguez", "Abir De", "Evimaria Terzi", "Manuel Gomez Rodriguez", "Alina Ene", "Michail Vlachos", "Aristides Gionis", "Michael Mathioudakis"], "route": "searchPerson -> getCoauthors -> getCoauthors", "code": "info = {'name': 'Manuel Gomez Rodriguez', 'interest': 'Social Networks'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ncoauthors1_list = getCoauthors(person_id = target_person_id)\n\ncoauthors2_list = []\nfor coauthor in coauthors1_list:\n    coauthors2_list.extend(getCoauthors(person_id = coauthor['person_id']))\n\ncoauthors2_names = [coauthor['name'] for coauthor in coauthors2_list]\n\nfinal_result = coauthors2_names\n", "result": ["Manuel Gomez Rodriguez", "Soumen Chakrabarti", "Vinayak Gupta", "Sunita Sarawagi", "Indradyumna Roy", "Lars Lorch", "Krishnateja Killamsetty", "Vahid Balazadeh", "Abhijnan Chakraborty", "Muhammad Bilal Zafar", "Meeyoung Cha", "Manuel Gomez Rodriguez", "Asia J. Biega", "Hoda Heidari", "Aidong Zhang", "Yaliang Li", "Jing Gao", "Chenwei Zhang", "Kai Lei", "Philip S. Yu", "Andrew M. Dai", "Zhifeng Chen", "Manuel Gomez Rodriguez", "Yanqi Zhou", "Xiaowei Jia", "Maria Florina Balcan", "Fenglong Ma", "Quoc Viet Le", "Denny Zhou", "Jason Wei", "Marinka Zitnik", "Zhitao Ying", "Christos Faloutsos", "Jiaxuan You", "Jon M. Kleinberg", "Hongyu Ren", "Srijan Kumar", "Weihua Hu", "Jaewon Yang", "Michihiro Yasunaga", "Carlos Guestrin", "Hongwei Wang", "Tailin Wu", "Marko Grobelnik", "Andreas Krause", "Manuel Gomez Rodriguez", "Austin Reilley Benson", "Xikun Zhang", "Xiang Ren", "Krishna P. Gummadi", "Manuel Gomez Rodriguez", "Krishnaram Kenthapadi", "Carlos Guestrin", "Ilija Bogunovic", "Mojmir Mutný", "Eric Joel Horvitz", "Jure Leskovec", "Anupam Gupta", "Hoda Heidari", "Parnian Kassraie", "Manuel Gomez Rodriguez", "Manuel Gomez Rodriguez", "Andreas Krause", "Abir De", "Wanqian Yang", "Manuel Gomez Rodriguez", "Abir De", "Evimaria Terzi", "Manuel Gomez Rodriguez", "Alina Ene", "Michail Vlachos", "Aristides Gionis", "Michael Mathioudakis"], "exe_time": 2.5374081134796143}
{"Query_en": "What is the abstract of the representative work of Shengyu Chen at University of Pittsburgh?", "Answer": "Identification of replication origins is playing a key role in understanding the mechanism of DNA replication. This task is of great significance in DNA sequence analysis. Because of its importance, some computational approaches have been introduced. Among these predictors, the iRO-3wPseKNC predictor is the first discriminative method that is able to correctly identify the entire replication origins. For further improving its predictive performance, we proposed the Pseudo k-tuple GC Composition (PsekGCC) approach to capture the \"GC asymmetry bias\" of yeast species by considering both the GC skew and the sequence order effects of k-tuple GC Composition (k-GCC) in this study. Based on PseKGCC, we proposed a new predictor called iRO-PsekGCC to identify the DNA replication origins. Rigorous jackknife test on two yeast species benchmark datasets (Saccharomyces cerevisiae, Pichia pastoris) indicated that iRO-PsekGCC outperformed iRO-3wPseKNC. It can be anticipated that iRO-PsekGCC will be a useful tool for DNA replication origin identification. Availability and implementation: The web-server for the iRO-PsekGCC predictor was established, and it can be accessed at http://bliulab.net/iRO-PsekGCC/.", "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Shengyu Chen', 'organization': 'University of Pittsburgh'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_abstract = target_publication_info['abstract']\nfinal_result = target_abstract\n", "result": "Identification of replication origins is playing a key role in understanding the mechanism of DNA replication. This task is of great significance in DNA sequence analysis. Because of its importance, some computational approaches have been introduced. Among these predictors, the iRO-3wPseKNC predictor is the first discriminative method that is able to correctly identify the entire replication origins. For further improving its predictive performance, we proposed the Pseudo k-tuple GC Composition (PsekGCC) approach to capture the \"GC asymmetry bias\" of yeast species by considering both the GC skew and the sequence order effects of k-tuple GC Composition (k-GCC) in this study. Based on PseKGCC, we proposed a new predictor called iRO-PsekGCC to identify the DNA replication origins. Rigorous jackknife test on two yeast species benchmark datasets (Saccharomyces cerevisiae, Pichia pastoris) indicated that iRO-PsekGCC outperformed iRO-3wPseKNC. It can be anticipated that iRO-PsekGCC will be a useful tool for DNA replication origin identification. Availability and implementation: The web-server for the iRO-PsekGCC predictor was established, and it can be accessed at http://bliulab.net/iRO-PsekGCC/.", "exe_time": 2.447136640548706}
{"Query_en": "What is the PDF link of the representative work of Binghui Peng at Computer Science Department, Columbia University?", "Answer": "https://static.aminer.cn/storage/pdf/mag/2017/7/2771017837.pdf", "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Binghui Peng', 'organization': 'Computer Science Department, Columbia University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_pdf = target_publication_info['pdf_link']\nfinal_result = target_pdf\n", "result": "https://static.aminer.cn/storage/pdf/mag/2017/7/2771017837.pdf", "exe_time": 2.4997453689575195}
{"Query_en": "Which journal or conference included the representative work of Hao Wang at Harvard University?", "Answer": {"info": {"name": "International Conference on Machine Learning"}, "issue": "", "volume": "abs/1901.10501"}, "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Hao Wang', 'organization': 'Harvard University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_venue = target_publication_info['venue']\nfinal_result = target_venue\n", "result": {"info": {"name": "International Conference on Machine Learning"}, "issue": "", "volume": "abs/1901.10501"}, "exe_time": 2.403414487838745}
{"Query_en": "What is the abstract of the representative work of Weiwei Tu in Online Convex Optimization field?", "Answer": "Machine learning techniques have deeply rooted in our everyday life. However, since it is knowledge- and labor-intensive to pursue good learning performance, human experts are heavily involved in every aspect of machine learning. In order to make machine learning techniques easier to apply and reduce the demand for experienced human experts, automated machine learning (AutoML) has emerged as a hot topic with both industrial and academic interest. In this paper, we provide an up to date survey on AutoML. First, we introduce and define the AutoML problem, with inspiration from both realms of automation and machine learning. Then, we propose a general AutoML framework that not only covers most existing approaches to date but also can guide the design for new methods. Subsequently, we categorize and review the existing works from two aspects, i.e., the problem setup and the employed techniques. Finally, we provide a detailed analysis of AutoML approaches and explain the reasons underneath their successful applications. We hope this survey can serve as not only an insightful guideline for AutoML beginners but also an inspiration for future research.", "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Weiwei Tu', 'interest': 'Online Convex Optimization'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_abstract = target_publication_info['abstract']\nfinal_result = target_abstract\n", "result": "Machine learning techniques have deeply rooted in our everyday life. However, since it is knowledge- and labor-intensive to pursue good learning performance, human experts are heavily involved in every aspect of machine learning. In order to make machine learning techniques easier to apply and reduce the demand for experienced human experts, automated machine learning (AutoML) has emerged as a hot topic with both industrial and academic interest. In this paper, we provide an up to date survey on AutoML. First, we introduce and define the AutoML problem, with inspiration from both realms of automation and machine learning. Then, we propose a general AutoML framework that not only covers most existing approaches to date but also can guide the design for new methods. Subsequently, we categorize and review the existing works from two aspects, i.e., the problem setup and the employed techniques. Finally, we provide a detailed analysis of AutoML approaches and explain the reasons underneath their successful applications. We hope this survey can serve as not only an insightful guideline for AutoML beginners but also an inspiration for future research.", "exe_time": 2.448883056640625}
{"Query_en": "What is the PDF link of the representative work of Zhen Lin in Recommender Systems field?", "Answer": "https://static.aminer.cn/upload/pdf/1312/1390/917/614012b25244ab9dcb8157fb_0.pdf", "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Zhen Lin', 'interest': 'Recommender Systems'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_pdf = target_publication_info['pdf_link']\nfinal_result = target_pdf\n", "result": "https://static.aminer.cn/upload/pdf/1312/1390/917/614012b25244ab9dcb8157fb_0.pdf", "exe_time": 2.4313700199127197}
{"Query_en": "Which journal or conference included the representative work of Dilip S. Arumugam in Apprenticeship Learning field?", "Answer": {"id": "53a72e9120f7420be8c9281e", "info": {"name": "ICML"}, "issue": "", "type": 10, "volume": ""}, "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Dilip S. Arumugam', 'interest': 'Apprenticeship Learning'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_venue = target_publication_info['venue']\nfinal_result = target_venue\n", "result": {"id": "53a72e9120f7420be8c9281e", "info": {"name": "ICML"}, "issue": "", "type": 10, "volume": ""}, "exe_time": 2.485450506210327}
