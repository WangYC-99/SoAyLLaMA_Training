{"Query_en": "Research interests of Jianguang Lou at Microsoft Research Asia", "Answer": ["Log Analysis", "Data Mining", "Online Service System", "Image Sequences", "Software Analytics", "Epipolar Geometry", "Image Motion Analysis", "Video Coding", "Incident Management", "Problem Identification"], "route": "searchPerson", "code": "info = {'name': 'Jianguang Lou', 'organization': 'Microsoft Research Asia'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ninterests = target_person_info['interests']\nfinal_result = interests\n", "result": ["Log Analysis", "Data Mining", "Online Service System", "Image Sequences", "Software Analytics", "Epipolar Geometry", "Image Motion Analysis", "Video Coding", "Incident Management", "Problem Identification"], "exe_time": 1.1943905353546143}
{"Query_en": "Citation count of Birgit Pfitzmann at IBM Zurich Research Lab", "Answer": 13620, "route": "searchPerson", "code": "info = {'name': 'Birgit Pfitzmann', 'organization': 'IBM Zurich Research Lab'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\nnum_citation = target_person_info['num_citation']\nfinal_result = num_citation\n", "result": 13620, "exe_time": 1.2891879081726074}
{"Query_en": "Number of published papers by Srija Chakraborty at Arizona State University", "Answer": 5, "route": "searchPerson", "code": "info = {'name': 'Srija Chakraborty', 'organization': 'Arizona State University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\nnum_pubs = target_person_info['num_pubs']\nfinal_result = num_pubs\n", "result": 5, "exe_time": 1.287775993347168}
{"Query_en": "Which institution does Wei Zeng who researches in Wei Zeng field belong to?", "Answer": "Shenzhen Institutes of Advanced Technology, Chinese Academy of Sciences", "route": "searchPerson", "code": "info = {'name': 'Wei Zeng', 'interest': 'Wei Zeng'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\norganization = target_person_info['organization']\nfinal_result = organization\n", "result": "Shenzhen Institutes of Advanced Technology, Chinese Academy of Sciences", "exe_time": 1.1633117198944092}
{"Query_en": "Citation count of Le Hui who researches in Computer Vision (cv) field", "Answer": 299, "route": "searchPerson", "code": "info = {'name': 'Le\\xa0Hui', 'interest': 'Computer Vision (cv)'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\nnum_citation = target_person_info['num_citation']\nfinal_result = num_citation\n", "result": 299, "exe_time": 1.297661304473877}
{"Query_en": "Number of papers published by Junchen Ye who researches in Deep Neural Network field", "Answer": 11, "route": "searchPerson", "code": "info = {'name': 'Junchen Ye', 'interest': 'Deep Neural Network'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\nnum_pubs = target_person_info['num_pubs']\nfinal_result = num_pubs\n", "result": 11, "exe_time": 1.2530910968780518}
{"Query_en": "Who are the researchers at State Key Laboratory of Internet of Things for Smart City, Department of Computer and Information Science, Faculty of Science and Technology, University of Macau?", "Answer": ["Pengyang Wang"], "route": "searchPerson", "code": "info = {'organization': 'State Key Laboratory of Internet of Things for Smart City, Department of Computer and Information Science, Faculty of Science and Technology, University of Macau'}\norganization = info['organization']\n\nperson_list = searchPerson(organization = organization)\nname_list = [person_list[i]['name'] for i in range(len(person_list))]\nfinal_result = name_list\n", "result": ["Pengyang Wang"], "exe_time": 1.289567470550537}
{"Query_en": "Who are the researchers in Telemetry field?", "Answer": ["Yoni Choukroun", "Yina Tang"], "route": "searchPerson", "code": "info = {'interest': 'Telemetry'}\ninterest = info['interest']\n\nperson_list = searchPerson(interest = interest)\nname_list = [person_list[i]['name'] for i in range(len(person_list))]\nfinal_result = name_list\n", "result": ["Yoni Choukroun", "Yina Tang"], "exe_time": 0.9489173889160156}
{"Query_en": "Who are the collaborators of Kyuseok Shim at Department of Electrical and Computer Engineering, Seoul National University?", "Answer": ["Feifei Li", "Andrei Zary Broder", "Jaideep Srivastava", "Aristides Gionis", "Johannes Gehrke", "Apostol (Paul) Natsev", "Xiaofang Zhou", "Kai Zheng", "Lei Chen", "Nick Koudas"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Kyuseok Shim', 'organization': 'Department of Electrical and Computer Engineering, Seoul National University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ncoauthors_list = getCoauthors(person_id = target_person_id)\ncoauthors_name_list = [coauthor['name'] for coauthor in coauthors_list]\nfinal_result = coauthors_name_list\n", "result": ["Feifei Li", "Andrei Zary Broder", "Jaideep Srivastava", "Aristides Gionis", "Johannes Gehrke", "Apostol (Paul) Natsev", "Xiaofang Zhou", "Kai Zheng", "Lei Chen", "Nick Koudas"], "exe_time": 1.9954001903533936}
{"Query_en": "Who are the collaborators of Zilin Gao in Large Number field?", "Answer": ["Qilong Wang"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Zilin Gao', 'interest': 'Large Number'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ncoauthors_list = getCoauthors(person_id = target_person_id)\ncoauthors_name_list = [coauthor['name'] for coauthor in coauthors_list]\nfinal_result = coauthors_name_list\n", "result": ["Qilong Wang"], "exe_time": 1.8624696731567383}
{"Query_en": "Who at Huawei Technologies Canada has a collaboration with Yingxue Zhang?", "Answer": ["Jianing Sun"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Yingxue Zhang', 'organization': 'Huawei Technologies Canada'}\norganization = info['organization']\nname = info['name']\n\norganization_person_list = searchPerson(organization = organization)\norganization_person_id_list = [person['person_id'] for person in organization_person_list]\ntarget_list = []\nfor interest_person_id in organization_person_id_list:\n    coauthors = getCoauthors(person_id = interest_person_id)\n    coauthor_name_list = [coauthor['name'] for coauthor in coauthors]\n    if name in coauthor_name_list:\n        target_list.append(getPersonBasicInfo(person_id=interest_person_id)['name'])\nfinal_result = target_list\n", "result": ["Jianing Sun"], "exe_time": 2.4658143520355225}
{"Query_en": "Who in Neural Network field has a collaboration with Jia Zhang?", "Answer": ["Tie-Yan Liu"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Jia Zhang', 'interest': 'Neural Network'}\ninterest = info['interest']\nname = info['name']\n\ninterest_person_list = searchPerson(interest = interest)\ninterest_person_id_list = [person['person_id'] for person in interest_person_list]\ntarget_list = []\nfor interest_person_id in interest_person_id_list:\n    coauthors = getCoauthors(person_id = interest_person_id)\n    coauthor_name_list = [coauthor['name'] for coauthor in coauthors]\n    if name in coauthor_name_list:\n        target_list.append(getPersonBasicInfo(person_id=interest_person_id)['name'])\nfinal_result = target_list\n", "result": ["Tie-Yan Liu"], "exe_time": 2.4093244075775146}
{"Query_en": "What are the papers published by Dongkai Wang at School of Computer Science, Peking University?", "Answer": ["Unsupervised Person Re-Identification via Multi-Label Classification", "Contextual Instance Decoupling for Robust Multi-Person Pose Estimation", "Robust Pose Estimation in Crowded Scenes with Direct Pose-Level Inference."], "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Dongkai\\xa0Wang', 'organization': 'School of Computer Science, Peking University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\npublications_list = getPersonPubs(person_id = target_person_id)\npublications_title_list = [publication['title'] for publication in publications_list]\nfinal_result = publications_title_list\n", "result": ["Unsupervised Person Re-Identification via Multi-Label Classification", "Contextual Instance Decoupling for Robust Multi-Person Pose Estimation", "Robust Pose Estimation in Crowded Scenes with Direct Pose-Level Inference."], "exe_time": 1.9073965549468994}
{"Query_en": "What is the citation count of the representative work of Prasenjit Mitra at Department of Computer Science and Engineering, College of Information Sciences and Technology, Penn State University?", "Answer": 1112, "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Prasenjit Mitra', 'organization': 'Department of Computer Science and Engineering, College of Information Sciences and Technology, Penn State University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\ntarget_num_citation = target_publication_dict['num_citation']\nfinal_result = target_num_citation\n", "result": 1112, "exe_time": 2.3096370697021484}
{"Query_en": "In which year was the representative work of Sergiy Matusevych at Microsoft Cloud Information Services Laboratory published?", "Answer": 2022, "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Sergiy Matusevych', 'organization': 'Microsoft Cloud Information Services Laboratory'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\npublications_list = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\nmax_citation = publications_list[0]\nfinal_result = max_citation['year']\n", "result": 2022, "exe_time": 1.8667869567871094}
{"Query_en": "Who are the authors of the representative work of Ok-Chul Jung at Korea Aerospace Research Institute?", "Answer": ["Shahroz Tariq", "Sangyup Lee", "Youjin Shin", "Myeong Shin Lee", "Okchul Jung", "Daewon Chung", "Simon S. Woo"], "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Ok-Chul Jung', 'organization': 'Korea Aerospace Research Institute'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\npublications_list = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\nmax_citation = publications_list[0]\nfinal_result = max_citation['year']\n", "result": 2019, "exe_time": 1.8636407852172852}
{"Query_en": "What are the papers published by Andrew Zhai in Visual Search field?", "Answer": ["Visual Search at Pinterest", "Toward Transformer-Based Object Detection", "Classification is a Strong Baseline for Deep Metric Learning", "Visual Discovery at Pinterest.", "Learning a Unified Embedding for Visual Search at Pinterest", "MultiSage: Empowering GCN with Contextualized Multi-Embeddings on Web-Scale Multipartite Networks", "User-Driven Geolocation of Untagged Desert Imagery Using Digital Elevation Models", "Billion-Scale Pretraining with Vision Transformers for Multi-Task Visual Representations", "Making Classification Competitive for Deep Metric Learning.", "Shop The Look: Building a Large Scale Visual Shopping System at  Pinterest"], "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Andrew Zhai', 'interest': 'Visual Search'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name=name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\npublications_list = getPersonPubs(person_id = target_person_id)\npublications_title_list = [publication['title'] for publication in publications_list]\nfinal_result = publications_title_list\n", "result": ["Visual Search at Pinterest", "Toward Transformer-Based Object Detection", "Classification is a Strong Baseline for Deep Metric Learning", "Visual Discovery at Pinterest.", "Learning a Unified Embedding for Visual Search at Pinterest", "MultiSage: Empowering GCN with Contextualized Multi-Embeddings on Web-Scale Multipartite Networks", "User-Driven Geolocation of Untagged Desert Imagery Using Digital Elevation Models", "Billion-Scale Pretraining with Vision Transformers for Multi-Task Visual Representations", "Making Classification Competitive for Deep Metric Learning.", "Shop The Look: Building a Large Scale Visual Shopping System at  Pinterest"], "exe_time": 1.7611603736877441}
{"Query_en": "What is the citation count of the representative work of Tianrui Li in Big Data field?", "Answer": 439, "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Tianrui Li', 'interest': 'Big Data'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\ntarget_num_citation = target_publication_dict['num_citation']\nfinal_result = target_num_citation\n", "result": 439, "exe_time": 2.086876630783081}
{"Query_en": "In which year was the representative work of Neil Shah in Graph Neural Networks field published?", "Answer": 2016, "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Neil Shah', 'interest': 'Graph Neural Networks'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name=name, interest=interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\nperson_pubs = getPersonPubs(person_id=target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = person_pubs[0]\npublication_year = target_publication_dict['year']\nfinal_result = publication_year\n", "result": 2016, "exe_time": 1.971613883972168}
{"Query_en": "Who are the authors of the representative work of Steve Hanneke in Active Learning field?", "Answer": ["Steve Hanneke", "Wenjie Fu", "Eric P. Xing"], "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Steve Hanneke', 'interest': 'Active Learning'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\nauthor_name_list = target_publication_dict['authors_name_list']\nfinal_result = author_name_list\n", "result": ["Steve Hanneke", "Wenjie Fu", "Eric P. Xing"], "exe_time": 2.0904805660247803}
{"Query_en": "Is Melissa Pugh at Eli Lilly and Company, Indianapolis male or female?", "Answer": "female", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Melissa Pugh', 'organization': 'Eli Lilly and Company, Indianapolis'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_gender = target_person_basic_info['gender']\nfinal_result = target_person_gender\n", "result": "female", "exe_time": 1.8411786556243896}
{"Query_en": "What is the title of Zheng Wang at Nanyang Technological University, Singapore, Singapore?", "Answer": "Ph.D", "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Zheng Wang', 'organization': 'Nanyang Technological University, Singapore, Singapore'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_title = target_publication_dict['title']\nfinal_result = target_publication_title\n", "result": "Convolutional Neural Networks For Energy Time Series Forecasting", "exe_time": 2.1337525844573975}
{"Query_en": "What is the introduction of Jesus Rios at IBM Research NY?", "Answer": "", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Jesus Rios', 'organization': 'IBM Research NY'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_bio = target_person_basic_info['bio']\nfinal_result = target_person_bio\n", "result": "", "exe_time": 1.7858200073242188}
{"Query_en": "What is the educational background of Hongzhi Chen at ByteDance Inc.?", "Answer": "15.8 - 20.7 The Chinese University of Hong Kong (CUHK) Shatin, Hong Kong Ph.D<br><br>2011.9 - 2015.6 Huazhong University of Science and Technology (HUST) Wuhan, China B.Eng in Computer Science and Technology", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Hongzhi Chen', 'organization': 'ByteDance Inc.'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_education_experience = target_person_basic_info['education_experience']\nfinal_result = target_person_education_experience\n", "result": "15.8 - 20.7 The Chinese University of Hong Kong (CUHK) Shatin, Hong Kong Ph.D<br><br>2011.9 - 2015.6 Huazhong University of Science and Technology (HUST) Wuhan, China B.Eng in Computer Science and Technology", "exe_time": 2.000072956085205}
{"Query_en": "What is the email of Zhen Zhang at School of Computing, National University of Singapore?", "Answer": "zhen@nus.edu.sg", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Zhen Zhang', 'organization': 'School of Computing, National University of Singapore'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_email = target_person_basic_info['email']\nfinal_result = target_person_email\n", "result": "zhen@nus.edu.sg", "exe_time": 1.834355115890503}
{"Query_en": "Is Valentin Dalibard in Neural Networks field male or female?", "Answer": "unknown", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Valentin Dalibard', 'interest': 'Neural Networks'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_gender = target_person_basic_info['gender']\nfinal_result = target_person_gender\n", "result": "unknown", "exe_time": 1.7978358268737793}
{"Query_en": "What is the title of Paula Branco in Resampling Strategies field?", "Answer": "Research", "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Paula Branco', 'interest': 'Resampling Strategies'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\ntarget_title = target_publication_dict['title']\nfinal_result = target_title\n", "result": "A Survey of Predictive Modeling on Imbalanced Domains", "exe_time": 2.0162885189056396}
{"Query_en": "What is the introduction of Zhuo Wang in Machine Learning field?", "Answer": "Skills and Expertise<br>Machine Learning<br>Classification<br>Neural Networks and Artificial Intelligence<br>Data Mining and Knowledge Discovery", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Zhuo Wang', 'interest': 'Machine Learning'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_bio = target_person_basic_info['bio']\nfinal_result = target_person_bio\n", "result": "Skills and Expertise<br>Machine Learning<br>Classification<br>Neural Networks and Artificial Intelligence<br>Data Mining and Knowledge Discovery", "exe_time": 1.7479195594787598}
{"Query_en": "What is the educational background of Zeyu Qin in Adversarial Transferability field?", "Answer": "Ph.D. student in Computer Science & Engineering, The Hong Kong University of Science and Technology, Current<br>M.Phil (Ph.D. –> M.Phil) in Computer and Information Engineering, The Chinese University of Hong Kong, Shenzhen, 2018-09-01 to 2022-05-30<br>B.Eng. in Information Engineering, Nanjing University of Aeronautics and Astronautics, 2014-09-01 to 2018-06-30", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Zeyu Qin', 'interest': 'Adversarial Transferability'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_education_experience = target_person_basic_info['education_experience']\nfinal_result = target_person_education_experience\n", "result": "Ph.D. student in Computer Science & Engineering, The Hong Kong University of Science and Technology, Current<br>M.Phil (Ph.D. –> M.Phil) in Computer and Information Engineering, The Chinese University of Hong Kong, Shenzhen, 2018-09-01 to 2022-05-30<br>B.Eng. in Information Engineering, Nanjing University of Aeronautics and Astronautics, 2014-09-01 to 2018-06-30", "exe_time": 1.9977169036865234}
{"Query_en": "What is the email of Liqiang Nie in Semantics field?", "Answer": "nieliqiang@gmail.com", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Liqiang Nie', 'interest': 'Semantics'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_email = target_person_basic_info['email']\nfinal_result = target_person_email\n", "result": "nieliqiang@gmail.com", "exe_time": 1.7519872188568115}
{"Query_en": "Who among the collaborators of Tong Zhao at Amazon are researching in Recommender System field?", "Answer": ["George Karypis", "Yikun Xian"], "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Tong Zhao', 'organization': 'Amazon'}\nname = info['name']\norganization = info['organization']\ntarget_interest = info['interest']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ncoauthor_list = getCoauthors(person_id = target_person_id)\n\ntarget_coauthor_names = []\nfor coauthor in coauthor_list:\n    coauthor_id = coauthor['person_id']\n    coauthor_interests_list = getPersonInterest(person_id = coauthor_id)\n    if target_interest in coauthor_interests_list:\n        target_coauthor_names.append(coauthor['name'])\n\nfinal_result = target_coauthor_names\n", "result": "exe error", "exe_time": 2.7372169494628906}
{"Query_en": "Who has the highest citation count among the collaborators of Yu Shen at School of Computer Science, Peking University?", "Answer": "Lei Chen", "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Yu Shen', 'organization': 'School of Computer Science, Peking University'}\nname = info['name']\norganization = info['organization']\n\n# Search the person\nperson_list = searchPerson(name=name, organization=organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\n\n# Get the coauthors\ncoauthors_list = getCoauthors(person_id=target_person_id)\n\n# get information of coauthors and find the one with highest citation\nmax_citation = 0\nmax_citation_author_name = ''\n\nfor coauthor in coauthors_list:\n    coauthor_name = coauthor['name']\n    coauthor_info_list = searchPerson(name = coauthor_name)\n    coauthor_info = coauthor_info_list[0]\n    coauthor_citation = coauthor_info['num_citation']\n    if coauthor_citation > max_citation:\n        max_citation = coauthor_citation\n        max_citation_author_name = coauthor_info['name']\n\nfinal_result = max_citation_author_name\n", "result": "Lei Chen", "exe_time": 3.6158323287963867}
{"Query_en": "Who has the most published papers among the collaborators of Ashley Davies at Jet Propulsion Laboratory, California Institute of Technology?", "Answer": "Cynthia B Phillips", "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Ashley Davies', 'organization': 'Jet Propulsion Laboratory, California Institute of Technology'}\nname = info['name']\norganization = info['organization']\n\n# Search the person\nperson_list = searchPerson(name=name, organization=organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\n\n# Get the coauthors\ncoauthors_list = getCoauthors(person_id=target_person_id)\n\n# get information of coauthors and find the one with highest citation\nmax_pubs = 0\nmax_pubs_author_name = ''\n\n# Iterate each coauthor and calculate his/her publication number\nfor coauthor in coauthors_list:\n    coauthor_name = coauthor['name']\n    coauthor_info_list = searchPerson(name = coauthor_name)\n    coauthor_info = coauthor_info_list[0]\n    coauthor_pubs = coauthor_info['num_pubs']\n    if coauthor_pubs > max_pubs:\n        max_pubs = coauthor_pubs\n        max_pubs_author_name = coauthor_info['name']\n\nfinal_result = max_pubs_author_name\n", "result": "Cynthia B Phillips", "exe_time": 3.8120083808898926}
{"Query_en": "Who among the collaborators of Chenyang Wang in Grain Yield field are at Department of Computer Science and Technology, Tsinghua Universityinstitution?", "Answer": ["Yiqun Liu", "Min Zhang"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Chenyang Wang', 'interest': 'Grain Yield'}\ninterest = info['interest']\nname = info['name']\n\ninterest_person_list = searchPerson(interest = interest)\ninterest_person_id_list = [person['person_id'] for person in interest_person_list]\ntarget_list = []\nfor interest_person_id in interest_person_id_list:\n    coauthors = getCoauthors(person_id = interest_person_id)\n    coauthor_name_list = [coauthor['name'] for coauthor in coauthors]\n    if name in coauthor_name_list:\n        target_list.append(getPersonBasicInfo(person_id=interest_person_id)['name'])\nfinal_result = target_list\n", "result": [], "exe_time": 2.428293228149414}
{"Query_en": "Who has the highest citation count among the collaborators of Kontson Kimberly in Upper Limb field?", "Answer": "David O Nahmias", "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Kontson Kimberly', 'interest': 'Upper Limb'}\nname = info['name']\ninterest = info['interest']\n\n# get specific person's information\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\n\n# Get the coauthors\ncoauthors_list = getCoauthors(person_id=target_person_id)\n\n# get information of coauthors and find the one with highest citation\nmax_citation = 0\nmax_citation_author_name = ''\n\nfor coauthor in coauthors_list:\n    coauthor_name = coauthor['name']\n    coauthor_info_list = searchPerson(name = coauthor_name)\n    coauthor_info = coauthor_info_list[0]\n    coauthor_citation = coauthor_info['num_citation']\n    if coauthor_citation > max_citation:\n        max_citation = coauthor_citation\n        max_citation_author_name = coauthor_info['name']\n\nfinal_result = max_citation_author_name\n", "result": "David O Nahmias", "exe_time": 3.59525465965271}
{"Query_en": "Who has the most published papers among the collaborators of Masahiro Ikeda in Nonlinear Schrodinger Equation field?", "Answer": "Yuichi Yoshida", "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Masahiro Ikeda', 'interest': 'Nonlinear Schrodinger Equation'}\nname = info['name']\ninterest = info['interest']\n\n# get specific person's information\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\n\n# Get the coauthors\ncoauthors_list = getCoauthors(person_id=target_person_id)\n\n# get information of coauthors and find the one with highest citation\nmax_pubs = 0\nmax_pubs_author_name = ''\n\n# Iterate each coauthor and calculate his/her publication number\nfor coauthor in coauthors_list:\n    coauthor_name = coauthor['name']\n    coauthor_info_list = searchPerson(name = coauthor_name)\n    coauthor_info = coauthor_info_list[0]\n    coauthor_pubs = coauthor_info['num_pubs']\n    if coauthor_pubs > max_pubs:\n        max_pubs = coauthor_pubs\n        max_pubs_author_name = coauthor_info['name']\n\nfinal_result = max_pubs_author_name\n", "result": "Yuichi Yoshida", "exe_time": 3.808793067932129}
{"Query_en": "Who are the collaborators of the collaborators of Ruhan Wang at Quora?", "Answer": ["Peng Jiang", "Ruhan Wang", "Gann Bierner", "Alex (Fengjie) Li", "Yingrui Yang", "Azadeh Moghtaderi", "Ruhan Wang", "Peng Jiang", "Alex (Fengjie) Li", "Yingrui Yang", "Azadeh Moghtaderi", "Ruhan Wang", "Gann Bierner", "Alex (Fengjie) Li", "Yingrui Yang", "Azadeh Moghtaderi", "Ruhan Wang", "Gann Bierner", "Peng Jiang", "Yingrui Yang", "Azadeh Moghtaderi", "Ruhan Wang", "Alex (Fengjie) Li", "Gann Bierner", "Peng Jiang", "Tao Yang"], "route": "searchPerson -> getCoauthors -> getCoauthors", "code": "info = {'name': 'Ruhan Wang', 'organization': 'Quora'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ncoauthors1_list = getCoauthors(person_id = target_person_id)\n\ncoauthors2_list = []\nfor coauthor in coauthors1_list:\n    coauthors2_list.extend(getCoauthors(person_id = coauthor['person_id']))\n\ncoauthors2_names = [coauthor['name'] for coauthor in coauthors2_list]\n\nfinal_result = coauthors2_names\n", "result": ["Peng Jiang", "Ruhan Wang", "Gann Bierner", "Alex (Fengjie) Li", "Yingrui Yang", "Azadeh Moghtaderi", "Ruhan Wang", "Peng Jiang", "Alex (Fengjie) Li", "Yingrui Yang", "Azadeh Moghtaderi", "Ruhan Wang", "Gann Bierner", "Alex (Fengjie) Li", "Yingrui Yang", "Azadeh Moghtaderi", "Ruhan Wang", "Gann Bierner", "Peng Jiang", "Yingrui Yang", "Azadeh Moghtaderi", "Ruhan Wang", "Alex (Fengjie) Li", "Gann Bierner", "Peng Jiang", "Tao Yang"], "exe_time": 2.471280574798584}
{"Query_en": "Who are the collaborators of the collaborators of Graham Cormode in Data Streams field?", "Answer": ["Christos Faloutsos", "Graham Cormode", "Cong Yu", "You Wu", "Barna Saha", "Nick Koudas", "Xuezhi Wang", "Johannes Gehrke", "Wendy Hui Wang", "Deepak Agarwal", "Jialu Liu", "Dale Markowitz", "Silu Huang", "Bin Yao", "Yufei Tao", "Bin Cui", "Yang Li", "Shanghua Teng", "Graham Cormode", "Jianling Sun", "David P. Woodruff", "Aristides Gionis", "Nick Koudas", "Graham Cormode", "Moses Charikar", "Samson Zhou", "Sihem Amer Yahia", "Yufei Tao", "Sibo Wang", "Wenqing Lin", "Zhewei Wei", "Tianyuan Jin", "Juncheng Liu", "Ronghua Li", "Johannes Gehrke", "Jian Pei", "Aixin Sun", "Kao Ben", "Ergute Bao", "Steven Chu-Hong Hoi", "Bryan Hooi", "Meihui Zhang", "Lu Qin", "Xu Yu", "Shiqi Zhang", "Yu Liu", "Guoren Wang", "Yiwei Wang", "Bin Yao", "Jirong Wen", "Stratis Ioannidis", "Graham Cormode", "Shaunak Chatterjee", "José Bento Ayres Pereira", "Shipeng Yu", "Jason Xu", "Kinjal Basu", "Birjodh Singh Tiwana", "Vahab S. Mirrokni", "Lin Chen", "Laxman Dhulipala", "Alessandro Epasto", "Graham Cormode", "Grigoris Velegkas", "Sergei Vassilvitskii", "Sara Ahmadian", "David P. Woodruff", "Haoyu Zhang", "Zengfeng Huang", "Graham Cormode", "Zhewei Wei", "Sepehr Assadi", "Zhenghao Peng", "Rasmus Pagh"], "route": "searchPerson -> getCoauthors -> getCoauthors", "code": "info = {'name': 'Graham Cormode', 'interest': 'Data Streams'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ncoauthors1_list = getCoauthors(person_id = target_person_id)\n\ncoauthors2_list = []\nfor coauthor in coauthors1_list:\n    coauthors2_list.extend(getCoauthors(person_id = coauthor['person_id']))\n\ncoauthors2_names = [coauthor['name'] for coauthor in coauthors2_list]\n\nfinal_result = coauthors2_names\n", "result": ["Christos Faloutsos", "Graham Cormode", "Cong Yu", "You Wu", "Barna Saha", "Nick Koudas", "Xuezhi Wang", "Johannes Gehrke", "Wendy Hui Wang", "Deepak Agarwal", "Jialu Liu", "Dale Markowitz", "Silu Huang", "Bin Yao", "Yufei Tao", "Bin Cui", "Yang Li", "Shanghua Teng", "Graham Cormode", "Jianling Sun", "David P. Woodruff", "Aristides Gionis", "Nick Koudas", "Graham Cormode", "Moses Charikar", "Samson Zhou", "Sihem Amer Yahia", "Yufei Tao", "Sibo Wang", "Wenqing Lin", "Zhewei Wei", "Tianyuan Jin", "Juncheng Liu", "Ronghua Li", "Johannes Gehrke", "Jian Pei", "Aixin Sun", "Kao Ben", "Ergute Bao", "Steven Chu-Hong Hoi", "Bryan Hooi", "Meihui Zhang", "Lu Qin", "Xu Yu", "Shiqi Zhang", "Yu Liu", "Guoren Wang", "Yiwei Wang", "Bin Yao", "Jirong Wen", "Stratis Ioannidis", "Graham Cormode", "Shaunak Chatterjee", "José Bento Ayres Pereira", "Shipeng Yu", "Jason Xu", "Kinjal Basu", "Birjodh Singh Tiwana", "Vahab S. Mirrokni", "Lin Chen", "Laxman Dhulipala", "Alessandro Epasto", "Graham Cormode", "Grigoris Velegkas", "Sergei Vassilvitskii", "Sara Ahmadian", "David P. Woodruff", "Haoyu Zhang", "Zengfeng Huang", "Graham Cormode", "Zhewei Wei", "Sepehr Assadi", "Zhenghao Peng", "Rasmus Pagh"], "exe_time": 2.496072769165039}
{"Query_en": "What is the abstract of the representative work of Zhibin Li at University of Technology Sydney?", "Answer": "Crowd Flow Prediction (CFP) is one major challenge in the intelligent transportation systems of the Sydney Trains Network. However, most advanced CFP methods only focus on entrance and exit flows at the major stations or a few subway lines, neglecting Crowd Flow Distribution (CFD) forecasting problem across the entire city network. CFD prediction plays an irreplaceable role in metro management as a tool that can help authorities plan route schedules and avoid congestion. In this paper, we propose three online non-negative matrix factorization (ONMF) models. ONMF-AO incorporates an Average Optimization strategy that adapts to stable passenger flows. ONMF-MR captures the Most Recent trends to achieve better performance when sudden changes in crowd flow occur. The Hybrid model, ONMF-H, integrates both ONMF-AO and ONMF-MR to exploit the strengths of each model in different scenarios and enhance the models' applicability to real-world situations. Given a series of CFD snapshots, both models learn the latent attributes of the train stations and, therefore, are able to capture transition patterns from one timestamp to the next by combining historic guidance. Intensive experiments on a large-scale, real-world dataset containing transactional data demonstrate the superiority of our ONMF models.\n\n", "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Zhibin Li', 'organization': 'University of Technology Sydney'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_abstract = target_publication_info['abstract']\nfinal_result = target_abstract\n", "result": "Crowd Flow Prediction (CFP) is one major challenge in the intelligent transportation systems of the Sydney Trains Network. However, most advanced CFP methods only focus on entrance and exit flows at the major stations or a few subway lines, neglecting Crowd Flow Distribution (CFD) forecasting problem across the entire city network. CFD prediction plays an irreplaceable role in metro management as a tool that can help authorities plan route schedules and avoid congestion. In this paper, we propose three online non-negative matrix factorization (ONMF) models. ONMF-AO incorporates an Average Optimization strategy that adapts to stable passenger flows. ONMF-MR captures the Most Recent trends to achieve better performance when sudden changes in crowd flow occur. The Hybrid model, ONMF-H, integrates both ONMF-AO and ONMF-MR to exploit the strengths of each model in different scenarios and enhance the models' applicability to real-world situations. Given a series of CFD snapshots, both models learn the latent attributes of the train stations and, therefore, are able to capture transition patterns from one timestamp to the next by combining historic guidance. Intensive experiments on a large-scale, real-world dataset containing transactional data demonstrate the superiority of our ONMF models.\n\n", "exe_time": 2.429161548614502}
{"Query_en": "What is the PDF link of the representative work of Qing Zhang at Airbnb?", "Answer": "https://cz5waila03cyo0tux1owpyofgoryroob.oss-cn-beijing.aliyuncs.com/41/2E/56/412E567F443369A4AED6F8B55AF39B03.pdf", "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Qing Zhang', 'organization': 'Airbnb'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_pdf = target_publication_info['pdf_link']\nfinal_result = target_pdf\n", "result": "https://cz5waila03cyo0tux1owpyofgoryroob.oss-cn-beijing.aliyuncs.com/41/2E/56/412E567F443369A4AED6F8B55AF39B03.pdf", "exe_time": 2.435241222381592}
{"Query_en": "Which journal or conference included the representative work of Johannes Huegle at Hasso Plattner Institute?", "Answer": {"info": {"name": "Proceedings of the 41st International Conference on Software Engineering: Software Engineering Education and Training"}, "issue": "", "volume": "abs/1903.01866"}, "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Johannes Huegle', 'organization': 'Hasso Plattner Institute'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_venue = target_publication_info['venue']\nfinal_result = target_venue\n", "result": {"info": {"name": "Proceedings of the 41st International Conference on Software Engineering: Software Engineering Education and Training"}, "issue": "", "volume": "abs/1903.01866"}, "exe_time": 2.4566407203674316}
{"Query_en": "What is the abstract of the representative work of Forrest Sheng Bao in Feature Extraction field?", "Answer": "In this paper, we employ Probabilistic Neural Network (PNN) with image and data processing techniques to implement a general purpose automated leaf recognition for plant classification. 12 leaf features are extracted and orthogonalized into 5 principal variables which consist the input vector of the PNN. The PNN is trained by 1800 leaves to classify 32 kinds of plants with an accuracy greater than 90%. Compared with other approaches, our algorithm is an accurate artificial intelligence approach which is fast in execution and easy in implementation.", "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Forrest Sheng Bao', 'interest': 'Feature Extraction'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_abstract = target_publication_info['abstract']\nfinal_result = target_abstract\n", "result": "In this paper, we employ Probabilistic Neural Network (PNN) with image and data processing techniques to implement a general purpose automated leaf recognition for plant classification. 12 leaf features are extracted and orthogonalized into 5 principal variables which consist the input vector of the PNN. The PNN is trained by 1800 leaves to classify 32 kinds of plants with an accuracy greater than 90%. Compared with other approaches, our algorithm is an accurate artificial intelligence approach which is fast in execution and easy in implementation.", "exe_time": 2.4310038089752197}
{"Query_en": "What is the PDF link of the representative work of Su Lu in Multi-view Anomaly Detection field?", "Answer": "https://static.aminer.cn/upload/pdf/1431/841/101/5eccb534e06a4c1b26a83971_0.pdf", "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Su Lu', 'interest': 'Multi-view Anomaly Detection'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_pdf = target_publication_info['pdf_link']\nfinal_result = target_pdf\n", "result": "https://static.aminer.cn/upload/pdf/1431/841/101/5eccb534e06a4c1b26a83971_0.pdf", "exe_time": 2.478325843811035}
{"Query_en": "Which journal or conference included the representative work of Richard Müller in Solar Radiation field?", "Answer": {"info": {"name": "knowledge discovery and data mining"}, "issue": "", "name": "Knowledge Discovery and Data Mining", "volume": "abs/1811.09496"}, "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Richard Müller', 'interest': 'Solar Radiation'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_venue = target_publication_info['venue']\nfinal_result = target_venue\n", "result": {"info": {"name": "knowledge discovery and data mining"}, "issue": "", "name": "Knowledge Discovery and Data Mining", "volume": "abs/1811.09496"}, "exe_time": 2.4054360389709473}
