{"Query_en": "Research interests of Zhi Tian at Meituan Inc.", "Answer": ["Object Detection", "Instance Segmentation", "Recurrent Neural Network", "Artificial Intelligence", "Transformer", "Computer Science", "Deep Learning", "Semantic Segmentation", "Text Detection", "Convolutional Network"], "route": "searchPerson", "code": "info = {'name': 'Zhi Tian', 'organization': 'Meituan Inc.'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ninterests = target_person_info['interests']\nfinal_result = interests\n", "result": ["Object Detection", "Instance Segmentation", "Recurrent Neural Network", "Artificial Intelligence", "Transformer", "Computer Science", "Deep Learning", "Semantic Segmentation", "Text Detection", "Convolutional Network"], "exe_time": 1.1863431930541992}
{"Query_en": "Citation count of Zhijun Chen at Department of Computer Science and Technology, Beihang University", "Answer": 18, "route": "searchPerson", "code": "info = {'name': 'Zhijun Chen', 'organization': 'Department of Computer Science and Technology, Beihang University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\nnum_citation = target_person_info['num_citation']\nfinal_result = num_citation\n", "result": 18, "exe_time": 1.3543696403503418}
{"Query_en": "Number of published papers by Zhiliang Tian at Department of Computer, National University of Defense Technology", "Answer": 29, "route": "searchPerson", "code": "info = {'name': 'Zhiliang Tian', 'organization': 'Department of Computer, National University of Defense Technology'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\nnum_pubs = target_person_info['num_pubs']\nfinal_result = num_pubs\n", "result": 29, "exe_time": 1.355924367904663}
{"Query_en": "Which institution does Patrick Koch who researches in Patrick Koch field belong to?", "Answer": "SAS Institute Inc.", "route": "searchPerson", "code": "info = {'name': 'Patrick Koch', 'interest': 'Patrick Koch field'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\norganization = target_person_info['organization']\nfinal_result = organization\n", "result": "exe error", "exe_time": 1.1749722957611084}
{"Query_en": "Citation count of Chicheng Zhang who researches in Active Learning field", "Answer": 981, "route": "searchPerson", "code": "info = {'name': 'Chicheng Zhang', 'interest': 'Active Learning'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\nnum_citation = target_person_info['num_citation']\nfinal_result = num_citation\n", "result": 981, "exe_time": 1.23006010055542}
{"Query_en": "Number of papers published by Junke Wang who researches in Ischemia And Reperfusion field", "Answer": 1, "route": "searchPerson", "code": "info = {'name': 'Junke Wang', 'interest': 'Ischemia And Reperfusion'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\nnum_pubs = target_person_info['num_pubs']\nfinal_result = num_pubs\n", "result": 1, "exe_time": 1.288191556930542}
{"Query_en": "Who are the researchers at Department of Computer Science, Yale University?", "Answer": ["Andre Wibisono", "Yang Cai", "Menglin Yang"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Junxiong Zhu', 'organization': 'Department of Computer Science, Yale University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ncoauthors_list = getCoauthors(person_id = target_person_id)\ncoauthors_name_list = [coauthor['name'] for coauthor in coauthors_list]\nfinal_result = coauthors_name_list\n", "result": "exe error", "exe_time": 1.961047649383545}
{"Query_en": "Who are the researchers in Fair Division field?", "Answer": ["Haris Aziz", "Georgios Amanatidis", "Rediet Abebe", "Simina Brânzei", "Yuan Gao"], "route": "searchPerson", "code": "info = {'interest': 'Fair Division'}\ninterest = info['interest']\n\nperson_list = searchPerson(interest = interest)\nname_list = [person_list[i]['name'] for i in range(len(person_list))]\nfinal_result = name_list\n", "result": ["Haris Aziz", "Georgios Amanatidis", "Rediet Abebe", "Simina Brânzei", "Yuan Gao"], "exe_time": 0.9533190727233887}
{"Query_en": "Who are the collaborators of Zhaoqiang Liu at School of Computing, National University of Singapore?", "Answer": ["Enze Xie", "Zhenguo Li", "Lewei Yao"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Zhaoqiang Liu', 'organization': 'School of Computing, National University of Singapore'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ncoauthors_list = getCoauthors(person_id = target_person_id)\ncoauthors_name_list = [coauthor['name'] for coauthor in coauthors_list]\nfinal_result = coauthors_name_list\n", "result": ["Enze Xie", "Zhenguo Li", "Lewei Yao"], "exe_time": 1.9622697830200195}
{"Query_en": "Who are the collaborators of H M Sajjad Hossain in Activity Recognition field?", "Answer": ["Nirmalya Roy", "Yash Chandak", "Markus Weimer"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'H M Sajjad Hossain', 'interest': 'Activity Recognition'}\ninterest = info['interest']\nname = info['name']\n\ninterest_person_list = searchPerson(interest = interest)\ninterest_person_id_list = [person['person_id'] for person in interest_person_list]\ntarget_list = []\nfor interest_person_id in interest_person_id_list:\n    coauthors = getCoauthors(person_id = interest_person_id)\n    coauthor_name_list = [coauthor['name'] for coauthor in coauthors]\n    if name in coauthor_name_list:\n        target_list.append(getPersonBasicInfo(person_id=interest_person_id)['name'])\nfinal_result = target_list\n", "result": [], "exe_time": 2.483208179473877}
{"Query_en": "Who at Tencent AI Lab has a collaboration with Wei Liu?", "Answer": ["Wenhao Jiang", "Li Shen"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Wei Liu', 'organization': 'Tencent AI Lab'}\norganization = info['organization']\nname = info['name']\n\norganization_person_list = searchPerson(organization = organization)\norganization_person_id_list = [person['person_id'] for person in organization_person_list]\ntarget_list = []\nfor interest_person_id in organization_person_id_list:\n    coauthors = getCoauthors(person_id = interest_person_id)\n    coauthor_name_list = [coauthor['name'] for coauthor in coauthors]\n    if name in coauthor_name_list:\n        target_list.append(getPersonBasicInfo(person_id=interest_person_id)['name'])\nfinal_result = target_list\n", "result": "exe error", "exe_time": 2.450754165649414}
{"Query_en": "Who in Ctr Prediction field has a collaboration with Ruiming Tang?", "Answer": ["Weinan Zhang", "Zhenguo Li", "Xiuqiang He", "Huifeng Guo"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Ruiming Tang', 'interest': 'Ctr Prediction'}\ninterest = info['interest']\nname = info['name']\n\ninterest_person_list = searchPerson(interest = interest)\ninterest_person_id_list = [person['person_id'] for person in interest_person_list]\ntarget_list = []\nfor interest_person_id in interest_person_id_list:\n    coauthors = getCoauthors(person_id = interest_person_id)\n    coauthor_name_list = [coauthor['name'] for coauthor in coauthors]\n    if name in coauthor_name_list:\n        target_list.append(getPersonBasicInfo(person_id=interest_person_id)['name'])\nfinal_result = target_list\n", "result": ["Weinan Zhang", "Zhenguo Li", "Xiuqiang He", "Huifeng Guo"], "exe_time": 2.446354389190674}
{"Query_en": "What are the papers published by Jia-Qi Yang at State Key Laboratory for Novel Software Technology, Nanjing University?", "Answer": ["Capturing Delayed Feedback In Conversion Rate Prediction Via Elapsed-Time Sampling", "Deep Multiple Instance Selection", "Corporate Relative Valuation Using Heterogeneous Multi-Modal Graph Neural Network", "Generalized Delayed Feedback Model with Post-Click Information in\n  Recommender Systems", "Bottom-Up and Top-Down Graph Pooling.", "RID-Noise: Towards Robust Inverse Design under Noisy Environments.", "Towards Understanding Transfer Learning Algorithms Using Meta Transfer Features."], "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Jia-Qi Yang', 'organization': 'State Key Laboratory for Novel Software Technology, Nanjing University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\npublications_list = getPersonPubs(person_id = target_person_id)\npublications_title_list = [publication['title'] for publication in publications_list]\nfinal_result = publications_title_list\n", "result": ["Capturing Delayed Feedback In Conversion Rate Prediction Via Elapsed-Time Sampling", "Deep Multiple Instance Selection", "Corporate Relative Valuation Using Heterogeneous Multi-Modal Graph Neural Network", "Generalized Delayed Feedback Model with Post-Click Information in\n  Recommender Systems", "Bottom-Up and Top-Down Graph Pooling.", "RID-Noise: Towards Robust Inverse Design under Noisy Environments.", "Towards Understanding Transfer Learning Algorithms Using Meta Transfer Features."], "exe_time": 1.9241070747375488}
{"Query_en": "What is the citation count of the representative work of Takuya Akiba at Preferred Networks, Inc.?", "Answer": 3015, "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Takuya Akiba', 'organization': 'Preferred Networks, Inc.'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\ntarget_num_citation = target_publication_dict['num_citation']\nfinal_result = target_num_citation\n", "result": 3015, "exe_time": 2.1517064571380615}
{"Query_en": "In which year was the representative work of Junheng Hao at Department of Computer Science, University of California, Los Angeles published?", "Answer": 2019, "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Junheng Hao', 'organization': 'Department of Computer Science, University of California, Los Angeles'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\npublications_list = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\nmax_citation = publications_list[0]\nfinal_result = max_citation['year']\n", "result": 2019, "exe_time": 1.9471538066864014}
{"Query_en": "Who are the authors of the representative work of Yue Gao at Intelligent Media and Cognition Lab, School of Software, Tsinghua University?", "Answer": ["Yifan Feng", "Haoxuan You", "Zizhao Zhang", "Rongrong Ji", "Yue Gao"], "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Yue Gao', 'organization': 'Intelligent Media and Cognition Lab, School of Software, Tsinghua University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\npublications_list = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\nmax_citation = publications_list[0]\nfinal_result = max_citation['year']\n", "result": 2019, "exe_time": 1.9793486595153809}
{"Query_en": "What are the papers published by Timothy Winters in Prescriptive Analytics field?", "Answer": ["Price Investment using Prescriptive Analytics and Optimization in Retail"], "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Timothy Winters', 'interest': 'Prescriptive Analytics'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name=name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\npublications_list = getPersonPubs(person_id = target_person_id)\npublications_title_list = [publication['title'] for publication in publications_list]\nfinal_result = publications_title_list\n", "result": ["Price Investment using Prescriptive Analytics and Optimization in Retail"], "exe_time": 1.7992897033691406}
{"Query_en": "What is the citation count of the representative work of Yining Ma in Deterministic Initialization Strategy field?", "Answer": 106, "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Yining Ma', 'interest': 'Deterministic Initialization Strategy'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\ntarget_num_citation = target_publication_dict['num_citation']\nfinal_result = target_num_citation\n", "result": 106, "exe_time": 2.144855499267578}
{"Query_en": "In which year was the representative work of Mislav Balunović in Fair Representation Learning field published?", "Answer": 2019, "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Mislav Balunović', 'interest': 'Fair Representation Learning'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\nperson_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = person_pubs[0]\npublication_year = target_publication_dict['year']\nfinal_result = publication_year\n", "result": 2019, "exe_time": 2.005120277404785}
{"Query_en": "Who are the authors of the representative work of Otmane Sakhi in Bandit Signals field?", "Answer": ["Otmane Sakhi", "Stephen Bonner", "David Rohde", "Flavian Vasile"], "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Otmane Sakhi', 'interest': 'Bandit Signals'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\nauthor_name_list = target_publication_dict['authors_name_list']\nfinal_result = author_name_list\n", "result": ["Otmane Sakhi", "Stephen Bonner", "David Rohde", "Flavian Vasile"], "exe_time": 2.139218330383301}
{"Query_en": "Is Reihaneh Rabbany at Mila, McGill University - CIFAR AI chair male or female?", "Answer": "female", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Reihaneh Rabbany', 'organization': 'Mila, McGill University - CIFAR AI'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_gender = target_person_basic_info['gender']\nfinal_result = target_person_gender\n", "result": "exe error", "exe_time": 1.8979971408843994}
{"Query_en": "What is the title of Helen Zhou at Carnegie Mellon University?", "Answer": "Assistant Research", "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Helen Zhou', 'organization': 'Carnegie Mellon University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_title = target_publication_dict['title']\nfinal_result = target_publication_title\n", "result": "Treatment Policy Learning in Multiobjective Settings with Fully Observed  Outcomes", "exe_time": 2.1079816818237305}
{"Query_en": "What is the introduction of Linpeng Huang at Department of Computer Science and Engineering, Shanghai Jiaotong University?", "Answer": "", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Linpeng Huang', 'organization': 'Department of Computer Science and Engineering, Shanghai Jiaotong University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_bio = target_person_basic_info['bio']\nfinal_result = target_person_bio\n", "result": "", "exe_time": 1.9233012199401855}
{"Query_en": "What is the educational background of Karandeep Singh at Data Science Group, Institute for Basic Science?", "Answer": "", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Karandeep Singh', 'organization': 'Data Science Group, Institute for Basic Science'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_education_experience = target_person_basic_info['education_experience']\nfinal_result = target_person_education_experience\n", "result": "", "exe_time": 2.0220322608947754}
{"Query_en": "What is the email of Claire Monteleoni at University of Colorado?", "Answer": "cmontel@colorado.edu", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Claire Monteleoni', 'organization': 'University of Colorado'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_email = target_person_basic_info['email']\nfinal_result = target_person_email\n", "result": "cmontel@colorado.edu", "exe_time": 1.7835419178009033}
{"Query_en": "Is Junhao Hua in Bayes Methods field male or female?", "Answer": "male", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Junhao Hua', 'interest': 'Bayes Methods'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_gender = target_person_basic_info['gender']\nfinal_result = target_person_gender\n", "result": "male", "exe_time": 1.805417537689209}
{"Query_en": "What is the title of Sujit K. Ghosh in Bioinformatics field?", "Answer": "Professor", "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Sujit K. Ghosh', 'interest': 'Bioinformatics'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_title = target_publication_dict['title']\nfinal_result = target_publication_title\n", "result": "Model choice: a minimum posterior predictive loss approach", "exe_time": 2.112846851348877}
{"Query_en": "What is the introduction of Lanbo Zhang in User Profile field?", "Answer": "Passionate about using machine learning and statistics to solve the problems in search and recommendation systems.", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Lanbo Zhang', 'interest': 'User Profile'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_bio = target_person_basic_info['bio']\nfinal_result = target_person_bio\n", "result": "Passionate about using machine learning and statistics to solve the problems in search and recommendation systems.", "exe_time": 1.7639265060424805}
{"Query_en": "What is the educational background of Zhengze Zhou in Interpretability field?", "Answer": "PhD in Statistics, 2021<br><br>Cornell University<br><br>Master in Computer Science, 2020<br><br>Cornell University<br><br>BSc in Probability and Statistics, 2016<br><br>Peking University", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Zhengze Zhou', 'interest': 'Interpretability'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_education_experience = target_person_basic_info['education_experience']\nfinal_result = target_person_education_experience\n", "result": "PhD in Statistics, 2021<br><br>Cornell University<br><br>Master in Computer Science, 2020<br><br>Cornell University<br><br>BSc in Probability and Statistics, 2016<br><br>Peking University", "exe_time": 1.9866890907287598}
{"Query_en": "What is the email of Laurence Yang in Metabolism field?", "Answer": "lyang@eng.ucsd.edu", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Laurence Yang', 'interest': 'Metabolism'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_email = target_person_basic_info['email']\nfinal_result = target_person_email\n", "result": "lyang@eng.ucsd.edu", "exe_time": 1.767021656036377}
{"Query_en": "Who among the collaborators of Fan Zhang at AI Labs, Didi Chuxing, Beijing, China are researching in Transfer Learning field?", "Answer": ["Hongtu Zhu", "Zhe Xu", "Yintai Ma", "Zhaodong Wang"], "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Fan Zhang', 'organization': 'AI Labs, Didi Chuxing, Beijing, China'}\nname = info['name']\norganization = info['organization']\ntarget_interest = info['interest']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ncoauthor_list = getCoauthors(person_id = target_person_id)\n\ntarget_coauthor_names = []\nfor coauthor in coauthor_list:\n    coauthor_id = coauthor['person_id']\n    coauthor_interests_list = getPersonInterest(person_id = coauthor_id)\n    if target_interest in coauthor_interests_list:\n        target_coauthor_names.append(coauthor['name'])\n\nfinal_result = target_coauthor_names\n", "result": "exe error", "exe_time": 2.867565155029297}
{"Query_en": "Who has the highest citation count among the collaborators of Huaxiang Zhang at Shandong Normal University?", "Answer": "Lina Yao", "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Huaxiang Zhang', 'organization': 'Shandong Normal University'}\nname = info['name']\norganization = info['organization']\n\n# Search the person\nperson_list = searchPerson(name=name, organization=organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\n\n# Get the coauthors\ncoauthors_list = getCoauthors(person_id=target_person_id)\n\n# get information of coauthors and find the one with highest citation\nmax_citation = 0\nmax_citation_author_name = ''\n\nfor coauthor in coauthors_list:\n    coauthor_name = coauthor['name']\n    coauthor_info_list = searchPerson(name = coauthor_name)\n    coauthor_info = coauthor_info_list[0]\n    coauthor_citation = coauthor_info['num_citation']\n    if coauthor_citation > max_citation:\n        max_citation = coauthor_citation\n        max_citation_author_name = coauthor_info['name']\n\nfinal_result = max_citation_author_name\n", "result": "Lina Yao", "exe_time": 3.5935282707214355}
{"Query_en": "Who has the most published papers among the collaborators of Avrim Blum at Toyota Technological Institute at Chicago?", "Answer": "Dawn Song", "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Avrim Blum', 'organization': 'Toyota Technological Institute at Chicago'}\nname = info['name']\norganization = info['organization']\n\n# Search the person\nperson_list = searchPerson(name=name, organization=organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\n\n# Get the coauthors\ncoauthors_list = getCoauthors(person_id=target_person_id)\n\n# get information of coauthors and find the one with highest citation\nmax_pubs = 0\nmax_pubs_author_name = ''\n\n# Iterate each coauthor and calculate his/her publication number\nfor coauthor in coauthors_list:\n    coauthor_name = coauthor['name']\n    coauthor_info_list = searchPerson(name = coauthor_name)\n    coauthor_info = coauthor_info_list[0]\n    coauthor_pubs = coauthor_info['num_pubs']\n    if coauthor_pubs > max_pubs:\n        max_pubs = coauthor_pubs\n        max_pubs_author_name = coauthor_info['name']\n\nfinal_result = max_pubs_author_name\n", "result": "Dawn Song", "exe_time": 3.7743685245513916}
{"Query_en": "Who among the collaborators of Ting Chen in Network Embedding field are at Google Braininstitution?", "Answer": ["Ed H. Chi", "Denny Zhou"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Ting Chen', 'interest': 'Network Embedding'}\ninterest = info['interest']\nname = info['name']\n\ninterest_person_list = searchPerson(interest = interest)\ninterest_person_id_list = [person['person_id'] for person in interest_person_list]\ntarget_list = []\nfor interest_person_id in interest_person_id_list:\n    coauthors = getCoauthors(person_id = interest_person_id)\n    coauthor_name_list = [coauthor['name'] for coauthor in coauthors]\n    if name in coauthor_name_list:\n        target_list.append(getPersonBasicInfo(person_id=interest_person_id)['name'])\nfinal_result = target_list\n", "result": [], "exe_time": 2.4191999435424805}
{"Query_en": "Who has the highest citation count among the collaborators of Vadim Lebedev in Convolutional Neural Networks field?", "Answer": "Alexander Ganshin", "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Vadim Lebedev', 'interest': 'Convolutional Neural Networks'}\nname = info['name']\ninterest = info['interest']\n\n# get specific person's information\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\n\n# Get the coauthors\ncoauthors_list = getCoauthors(person_id=target_person_id)\n\n# get information of coauthors and find the one with highest citation\nmax_citation = 0\nmax_citation_author_name = ''\n\nfor coauthor in coauthors_list:\n    coauthor_name = coauthor['name']\n    coauthor_info_list = searchPerson(name = coauthor_name)\n    coauthor_info = coauthor_info_list[0]\n    coauthor_citation = coauthor_info['num_citation']\n    if coauthor_citation > max_citation:\n        max_citation = coauthor_citation\n        max_citation_author_name = coauthor_info['name']\n\nfinal_result = max_citation_author_name\n", "result": "Alexander Ganshin", "exe_time": 3.6516470909118652}
{"Query_en": "Who has the most published papers among the collaborators of Houshuang Chen in Chronic Obstructive Pulmonary Disease field?", "Answer": "Zengfeng Huang", "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Houshuang Chen', 'interest': 'Chronic Obstructive Pulmonary Disease'}\nname = info['name']\ninterest = info['interest']\n\n# get specific person's information\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\n\n# Get the coauthors\ncoauthors_list = getCoauthors(person_id=target_person_id)\n\n# get information of coauthors and find the one with highest citation\nmax_pubs = 0\nmax_pubs_author_name = ''\n\n# Iterate each coauthor and calculate his/her publication number\nfor coauthor in coauthors_list:\n    coauthor_name = coauthor['name']\n    coauthor_info_list = searchPerson(name = coauthor_name)\n    coauthor_info = coauthor_info_list[0]\n    coauthor_pubs = coauthor_info['num_pubs']\n    if coauthor_pubs > max_pubs:\n        max_pubs = coauthor_pubs\n        max_pubs_author_name = coauthor_info['name']\n\nfinal_result = max_pubs_author_name\n", "result": "Zengfeng Huang", "exe_time": 3.8361008167266846}
{"Query_en": "Who are the collaborators of the collaborators of Avi Shahar at Yahoo! Inc.?", "Answer": ["Michal Aharon", "Nadav Golbandi", "Avi Shahar", "Yehuda Koren", "Tomer Koren", "Dobri Dobrev", "Hadas Vogel", "Assaf Singer", "Oren Somekh", "Avi Shahar", "Dobri Dobrev", "Hadas Vogel", "Assaf Singer", "Hadas Vogel", "Assaf Singer", "Avi Shahar", "Michal Aharon", "Oren Somekh", "Dobri Dobrev", "Assaf Singer", "Avi Shahar", "Michal Aharon", "Oren Somekh", "Dobri Dobrev", "Hadas Vogel", "Avi Shahar", "Michal Aharon", "Oren Somekh"], "route": "searchPerson -> getCoauthors -> getCoauthors", "code": "info = {'name': 'Avi Shahar', 'organization': 'Yahoo! Inc.'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ncoauthors1_list = getCoauthors(person_id = target_person_id)\n\ncoauthors2_list = []\nfor coauthor in coauthors1_list:\n    coauthors2_list.extend(getCoauthors(person_id = coauthor['person_id']))\n\ncoauthors2_names = [coauthor['name'] for coauthor in coauthors2_list]\n\nfinal_result = coauthors2_names\n", "result": ["Michal Aharon", "Nadav Golbandi", "Avi Shahar", "Yehuda Koren", "Tomer Koren", "Dobri Dobrev", "Hadas Vogel", "Assaf Singer", "Oren Somekh", "Avi Shahar", "Dobri Dobrev", "Hadas Vogel", "Assaf Singer", "Hadas Vogel", "Assaf Singer", "Avi Shahar", "Michal Aharon", "Oren Somekh", "Dobri Dobrev", "Assaf Singer", "Avi Shahar", "Michal Aharon", "Oren Somekh", "Dobri Dobrev", "Hadas Vogel", "Avi Shahar", "Michal Aharon", "Oren Somekh"], "exe_time": 2.5019049644470215}
{"Query_en": "Who are the collaborators of the collaborators of Thai Hung Le in Memory Augmented Neural Networks field?", "Answer": ["Truyen Tran", "Kien Do", "Thai Hung Le", "Svetha Venkatesh", "Kien Do", "Thai Hung Le", "Yuan Jiang", "Svetha Venkatesh", "Truyen Tran", "Thai Hung Le", "Toan Nguyen"], "route": "searchPerson -> getCoauthors -> getCoauthors", "code": "info = {'name': 'Thai Hung Le', 'interest': 'Memory Augmented Neural Networks'}\ninterest = info['interest']\nname = info['name']\n\ninterest_person_list = searchPerson(interest = interest)\ninterest_person_id_list = [person['person_id'] for person in interest_person_list]\ntarget_list = []\nfor interest_person_id in interest_person_id_list:\n    coauthors1 = getCoauthors(person_id = interest_person_id)\n    coauthors2_list = [coauthor['name'] for coauthor in coauthors1]\n    if name in coauthors2_list:\n        target_list.append(getCoauthors(person_id=interest_person_id)['name'])\nfinal_result = target_list\n", "result": [], "exe_time": 2.554140329360962}
{"Query_en": "What is the abstract of the representative work of David Rohde at Criteo?", "Answer": "We present the largest catalogue to date of optical counterparts for H i radio-selected galaxies, HOPCAT. Of the 4315 H i radio-detected sources from the H i Parkes All Sky Survey (HIPASS) catalogue, we find optical counterparts for 3618 (84 per cent) galaxies. Of these, 1798 (42 per cent) have confirmed optical velocities and 848 (20 per cent) are single matches without confirmed velocities. Some...", "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'David Rohde', 'organization': 'Criteo'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_abstract = target_publication_info['abstract']\nfinal_result = target_abstract\n", "result": "We present the largest catalogue to date of optical counterparts for H i radio-selected galaxies, HOPCAT. Of the 4315 H i radio-detected sources from the H i Parkes All Sky Survey (HIPASS) catalogue, we find optical counterparts for 3618 (84 per cent) galaxies. Of these, 1798 (42 per cent) have confirmed optical velocities and 848 (20 per cent) are single matches without confirmed velocities. Some...", "exe_time": 2.408353567123413}
{"Query_en": "What is the PDF link of the representative work of Byron J. Gao at Department of Computer Science, Texas State University?", "Answer": "https://cz5waila03cyo0tux1owpyofgoryroob.oss-cn-beijing.aliyuncs.com/CF/6B/3D/CF6B3DD226C5038918D50FF7B11C8F46.pdf", "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Byron J. Gao', 'organization': 'Department of Computer Science, Texas State University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_pdf = target_publication_info['pdf_link']\nfinal_result = target_pdf\n", "result": "https://cz5waila03cyo0tux1owpyofgoryroob.oss-cn-beijing.aliyuncs.com/CF/6B/3D/CF6B3DD226C5038918D50FF7B11C8F46.pdf", "exe_time": 2.5337696075439453}
{"Query_en": "Which journal or conference included the representative work of Cristos Goodrow at Google?", "Answer": {"info": {"name": "KDD"}, "issue": "", "volume": "abs/1903.00780"}, "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Cristos Goodrow', 'organization': 'Google'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_venue = target_publication_info['venue']\nfinal_result = target_venue\n", "result": {"info": {"name": "KDD"}, "issue": "", "volume": "abs/1903.00780"}, "exe_time": 2.392864227294922}
{"Query_en": "What is the abstract of the representative work of Neel Sundaresan in Cloud-native Applications field?", "Answer": "Benchmark datasets have a significant impact on accelerating research in programming language tasks. In this paper, we introduce CodeXGLUE, a benchmark dataset to foster machine learning research for program understanding and generation. CodeXGLUE includes a collection of 10 tasks across 14 datasets and a platform for model evaluation and comparison. CodeXGLUE also features three baseline systems, including the BERT-style, GPT-style, and Encoder-Decoder models, to make it easy for researchers to use the platform. The availability of such data and baselines can help the development and validation of new methods that can be applied to various program understanding and generation problems.", "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Neel Sundaresan', 'interest': 'Cloud-native Applications'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_abstract = target_publication_info['abstract']\nfinal_result = target_abstract\n", "result": "Benchmark datasets have a significant impact on accelerating research in programming language tasks. In this paper, we introduce CodeXGLUE, a benchmark dataset to foster machine learning research for program understanding and generation. CodeXGLUE includes a collection of 10 tasks across 14 datasets and a platform for model evaluation and comparison. CodeXGLUE also features three baseline systems, including the BERT-style, GPT-style, and Encoder-Decoder models, to make it easy for researchers to use the platform. The availability of such data and baselines can help the development and validation of new methods that can be applied to various program understanding and generation problems.", "exe_time": 2.4401443004608154}
{"Query_en": "What is the PDF link of the representative work of Defu Lian in Recommender System field?", "Answer": "//static.aminer.org/pdf/kdd2016/KDD-2016-184.pdf", "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Defu Lian', 'interest': 'Recommender System'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_pdf = target_publication_info['pdf_link']\nfinal_result = target_pdf\n", "result": "//static.aminer.org/pdf/kdd2016/KDD-2016-184.pdf", "exe_time": 2.443387746810913}
{"Query_en": "Which journal or conference included the representative work of Bryan Perozzi in Graph field?", "Answer": {"id": "53a72d4220f7420be8c5fa02", "info": {"name": "KDD"}, "issue": "", "type": 0, "volume": "abs/1403.6652"}, "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Bryan Perozzi', 'interest': 'Graph'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_venue = target_publication_info['venue']\nfinal_result = target_venue\n", "result": {"id": "53a72d4220f7420be8c5fa02", "info": {"name": "KDD"}, "issue": "", "type": 0, "volume": "abs/1403.6652"}, "exe_time": 2.411951780319214}
