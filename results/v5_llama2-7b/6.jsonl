{"Query_en": "Research interests of Tianlong Chen at Chandra Department of Electrical and Computer Engineering, Cockrell School Engineering, The University of Texas at Austin", "Answer": ["Pruning", "Deep Learning Architectures And Techniques", "Topic Detection", "Adversarial Robustness", "Vision Transformer", "Decentralized Control", "Vision-based Control", "Dynamic Sparse Training", "Adversarial Attack And Defense", "Semantic Segmentation"], "route": "searchPerson", "code": "info = {'name': 'Tianlong Chen', 'organization': 'Chandra Department of Electrical and Computer Engineering, Cockrell School Engineering, The University of Texas at Austin'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ninterests = target_person_info['interests']\nfinal_result = interests\n", "result": ["Pruning", "Deep Learning Architectures And Techniques", "Topic Detection", "Adversarial Robustness", "Vision Transformer", "Decentralized Control", "Vision-based Control", "Dynamic Sparse Training", "Adversarial Attack And Defense", "Semantic Segmentation"], "exe_time": 1.3559978008270264}
{"Query_en": "Citation count of Weixuan Bao at PAttern Learning and Mining Lab, School of computer science and engineering, Southeast University", "Answer": 24, "route": "searchPerson", "code": "info = {'name': 'Weixuan\\xa0Bao', 'organization': 'PAttern Learning and Mining Lab, School of computer science and engineering, Southeast University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\nnum_citation = target_person_info['num_citation']\nfinal_result = num_citation\n", "result": 24, "exe_time": 1.4599170684814453}
{"Query_en": "Number of published papers by Zhen Wang at The Ohio State University", "Answer": 9, "route": "searchPerson", "code": "info = {'name': 'Zhen Wang', 'organization': 'The Ohio State University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\nnum_pubs = target_person_info['num_pubs']\nfinal_result = num_pubs\n", "result": 9, "exe_time": 1.2238681316375732}
{"Query_en": "Which institution does Yuhui Yuan who researches in Yuhui Yuan field belong to?", "Answer": "Microsoft", "route": "searchPerson", "code": "info = {'name': 'Yuhui Yuan', 'interest': 'Yuhui Yuan'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\norganization = target_person_info['organization']\nfinal_result = organization\n", "result": "Microsoft", "exe_time": 1.179332971572876}
{"Query_en": "Citation count of Junliang Yu who researches in Matrix Factorization field", "Answer": 1268, "route": "searchPerson", "code": "info = {'name': 'Junliang Yu', 'interest': 'Matrix Factorization'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\nnum_citation = target_person_info['num_citation']\nfinal_result = num_citation\n", "result": 1268, "exe_time": 1.2419054508209229}
{"Query_en": "Number of papers published by Zijie Huang who researches in Hashtag Recommendation field", "Answer": 12, "route": "searchPerson", "code": "info = {'name': 'Zijie Huang', 'interest': 'Hashtag Recommendation'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\nnum_pubs = target_person_info['num_pubs']\nfinal_result = num_pubs\n", "result": 12, "exe_time": 1.2775568962097168}
{"Query_en": "Who are the researchers at MIT?", "Answer": ["Yu-An Chung", "Lei Cao", "Slobodan Mitrović", "Michael Oberst"], "route": "searchPerson", "code": "info = {'organization': 'MIT'}\norganization = info['organization']\n\nperson_list = searchPerson(organization = organization)\nname_list = [person_list[i]['name'] for i in range(len(person_list))]\nfinal_result = name_list\n", "result": ["Yu-An Chung", "Lei Cao", "Slobodan Mitrović", "Michael Oberst"], "exe_time": 0.9237258434295654}
{"Query_en": "Who are the researchers in Learning Rates field?", "Answer": ["Rohan Anil", "Ka-Ho Chow"], "route": "searchPerson", "code": "info = {'interest': 'Learning Rates'}\ninterest = info['interest']\n\nperson_list = searchPerson(interest = interest)\nname_list = [person_list[i]['name'] for i in range(len(person_list))]\nfinal_result = name_list\n", "result": ["Rohan Anil", "Ka-Ho Chow"], "exe_time": 0.9659419059753418}
{"Query_en": "Who are the collaborators of Jiayu Tang at Alibaba Group Hangzhou China?", "Answer": ["Xiang Ao", "Qing He", "Yang Liu"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Jiayu Tang', 'organization': 'Alibaba Group Hangzhou China'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ncoauthors_list = getCoauthors(person_id = target_person_id)\ncoauthors_name_list = [coauthor['name'] for coauthor in coauthors_list]\nfinal_result = coauthors_name_list\n", "result": ["Xiang Ao", "Qing He", "Yang Liu"], "exe_time": 1.9112179279327393}
{"Query_en": "Who are the collaborators of Bing Bai in Mashups field?", "Answer": ["Yun Raymond Fu", "Yulun Zhang"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Bing Bai', 'interest': 'Mashups'}\ninterest = info['interest']\nname = info['name']\n\ninterest_person_list = searchPerson(interest = interest)\ninterest_person_id_list = [person['person_id'] for person in interest_person_list]\ntarget_list = []\nfor interest_person_id in interest_person_id_list:\n    coauthors = getCoauthors(person_id = interest_person_id)\n    coauthor_name_list = [coauthor['name'] for coauthor in coauthors]\n    if name in coauthor_name_list:\n        target_list.append(getPersonBasicInfo(person_id=interest_person_id)['name'])\nfinal_result = target_list\n", "result": [], "exe_time": 2.3914051055908203}
{"Query_en": "Who at Samsung Research has a collaboration with Yunsu Lee?", "Answer": ["SooHyung Kim"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Yunsu Lee', 'organization': 'Samsung Research'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ncoauthors_list = getCoauthors(person_id = target_person_id)\ncoauthors_name_list = [coauthor['name'] for coauthor in coauthors_list]\nfinal_result = coauthors_name_list\n", "result": ["SooHyung Kim", "Jungho Park", "Shaoxu Song", "Sungmin Yi"], "exe_time": 1.8338491916656494}
{"Query_en": "Who in Game Action Modeling field has a collaboration with Suhaas Kalpam?", "Answer": ["Tridib Mukherjee", "Samrat Dattagupta", "Vikram Vimal", "Mridul Sachdeva", "Deepanshi Seth"], "route": "searchPerson -> getCoauthors", "code": "info = {'name': 'Suhaas Kalpam', 'interest': 'Game Action Modeling'}\ninterest = info['interest']\nname = info['name']\n\ninterest_person_list = searchPerson(interest = interest)\ninterest_person_id_list = [person['person_id'] for person in interest_person_list]\ntarget_list = []\nfor interest_person_id in interest_person_id_list:\n    coauthors = getCoauthors(person_id = interest_person_id)\n    coauthor_name_list = [coauthor['name'] for coauthor in coauthors]\n    if name in coauthor_name_list:\n        target_list.append(getPersonBasicInfo(person_id=interest_person_id)['name'])\nfinal_result = target_list\n", "result": ["Tridib Mukherjee", "Samrat Dattagupta", "Vikram Vimal", "Mridul Sachdeva", "Deepanshi Seth"], "exe_time": 2.427434206008911}
{"Query_en": "What are the papers published by Yaliang Li at Alibaba DAMO Academy?", "Answer": ["Simple and Deep Graph Convolutional Networks", "Resolving conflicts in heterogeneous data by truth discovery and source reliability estimation", "A Survey on Truth Discovery", "A confidence-aware approach for truth discovery on long-tail data", "A Survey on Causal Inference", "Representation Learning for Treatment Effect Estimation from Observational Data.", "FaitCrowd: Fine Grained Truth Discovery for Crowdsourced Data Aggregation", "Joint Slot Filling And Intent Detection Via Capsule Neural Networks", "On the Discovery of Evolving Truth", "Truth Discovery on Crowd Sensing of Correlated Entities"], "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Yaliang Li', 'organization': 'Alibaba DAMO Academy'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\npublications_list = getPersonPubs(person_id = target_person_id)\npublications_title_list = [publication['title'] for publication in publications_list]\nfinal_result = publications_title_list\n", "result": ["Simple and Deep Graph Convolutional Networks", "Resolving conflicts in heterogeneous data by truth discovery and source reliability estimation", "A Survey on Truth Discovery", "A confidence-aware approach for truth discovery on long-tail data", "A Survey on Causal Inference", "Representation Learning for Treatment Effect Estimation from Observational Data.", "FaitCrowd: Fine Grained Truth Discovery for Crowdsourced Data Aggregation", "Joint Slot Filling And Intent Detection Via Capsule Neural Networks", "On the Discovery of Evolving Truth", "Truth Discovery on Crowd Sensing of Correlated Entities"], "exe_time": 1.8220665454864502}
{"Query_en": "What is the citation count of the representative work of Liu Ren at Robert Bosch Research?", "Answer": 322, "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Liu Ren', 'organization': 'Robert Bosch Research'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\npublications_list = getPersonPubs(person_id = target_person_id)\n# Assuming the representative work is the one with the most citations\n# The list was sorted by citation\nmax_citation = publications_list[0]\nfinal_result = max_citation['num_citation']\n", "result": 322, "exe_time": 1.9801733493804932}
{"Query_en": "In which year was the representative work of Jiuxiang Gu at Document Intelligence Lab, Adobe Research published?", "Answer": 2018, "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Jiuxiang Gu', 'organization': 'Document Intelligence Lab, Adobe Research'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\ntarget_num_citation = target_publication_dict['num_citation']\nfinal_result = target_num_citation\n", "result": 403, "exe_time": 2.1427764892578125}
{"Query_en": "Who are the authors of the representative work of Rong Pan at School of Data and Computer Science, Sun Yat-sen University?", "Answer": ["Rong Pan", "Yunhong Zhou", "Bin Cao", "Nathan N. Liu", "Rajan Lukose", "Martin Scholz", "Qiang Yang"], "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Rong Pan', 'organization': 'School of Data and Computer Science, Sun Yat-sen University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\npublications_list = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\nmax_citation = publications_list[0]\nfinal_result = max_citation['year']\n", "result": 2008, "exe_time": 1.8924474716186523}
{"Query_en": "What are the papers published by Sangdon Park in Canonical Scene-based Contextual Model field?", "Answer": ["PAC Confidence Sets for Deep Neural Networks via Calibrated Prediction", "Calibrated Prediction With Covariate Shift Via Unsupervised Domain Adaptation", "Comparison of a drug-eluting balloon first and then bare metal stent with a drug-eluting stent for treatment of de novo lesions: study protocol of a randomized controlled trial.", "iDECODe: In-Distribution Equivariance for Conformal Out-of-Distribution Detection.", "PAC Confidence Predictions for Deep Neural Network Classifiers.", "PAC Prediction Sets Under Covariate Shift", "Abnormal object detection by canonical scene-based contextual model", "Clinical Characteristics And Predictors Of In-Hospital Mortality In Patients With Cardiogenic Shock", "Sequential Covariate Shift Detection Using Classifier Two-Sample Tests.", "Successful coronary stent retrieval from the ascending aorta using a gooseneck snare kit."], "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Sangdon Park', 'interest': 'Canonical Scene-based Contextual Model'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name=name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\npublications_list = getPersonPubs(person_id = target_person_id)\npublications_title_list = [publication['title'] for publication in publications_list]\nfinal_result = publications_title_list\n", "result": ["PAC Confidence Sets for Deep Neural Networks via Calibrated Prediction", "Calibrated Prediction With Covariate Shift Via Unsupervised Domain Adaptation", "Comparison of a drug-eluting balloon first and then bare metal stent with a drug-eluting stent for treatment of de novo lesions: study protocol of a randomized controlled trial.", "iDECODe: In-Distribution Equivariance for Conformal Out-of-Distribution Detection.", "PAC Confidence Predictions for Deep Neural Network Classifiers.", "PAC Prediction Sets Under Covariate Shift", "Abnormal object detection by canonical scene-based contextual model", "Clinical Characteristics And Predictors Of In-Hospital Mortality In Patients With Cardiogenic Shock", "Sequential Covariate Shift Detection Using Classifier Two-Sample Tests.", "Successful coronary stent retrieval from the ascending aorta using a gooseneck snare kit."], "exe_time": 1.8376855850219727}
{"Query_en": "What is the citation count of the representative work of Michael Dinitz in Algorithms With Predictions field?", "Answer": 219, "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Michael Dinitz', 'interest': 'Algorithms With Predictions'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\ntarget_num_citation = target_publication_dict['num_citation']\nfinal_result = target_num_citation\n", "result": 219, "exe_time": 2.100572347640991}
{"Query_en": "In which year was the representative work of Ju Fan in Crowdsourcing field published?", "Answer": 2018, "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Ju Fan', 'interest': 'Crowdsourcing'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\ntarget_num_citation = target_publication_dict['num_citation']\nfinal_result = target_num_citation\n", "result": 510, "exe_time": 2.087216854095459}
{"Query_en": "Who are the authors of the representative work of Themistoklis Mavridis in Machine Learning field?", "Answer": ["Lucas Bernardi", "Themistoklis Mavridis", "Pablo Estevez"], "route": "searchPerson -> getPersonPubs", "code": "info = {'name': 'Themistoklis Mavridis', 'interest': 'Machine Learning'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\n# The list was sorted by citation\ntarget_publication_dict = target_person_pubs[0]\nauthor_name_list = target_publication_dict['authors_name_list']\nfinal_result = author_name_list\n", "result": ["Lucas Bernardi", "Themistoklis Mavridis", "Pablo Estevez"], "exe_time": 2.114490270614624}
{"Query_en": "Is Lizhen Cui at School of Software, Shandong University male or female?", "Answer": "male", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Lizhen Cui', 'organization': 'School of Software, Shandong University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_gender = target_person_basic_info['gender']\nfinal_result = target_person_gender\n", "result": "male", "exe_time": 1.826418399810791}
{"Query_en": "What is the title of Ling Shao at Inception Institute of Artificial Intelligence?", "Answer": "Chief Scientist", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Ling Shao', 'organization': 'Inception Institute of Artificial Intelligence'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_position = target_person_basic_info['position']\nfinal_result = target_person_position\n", "result": "Chief Scientist", "exe_time": 1.8159611225128174}
{"Query_en": "What is the introduction of Kaiqing Zhang at Massachusetts Institute of Technology?", "Answer": "My research interests lie in the intersection of learning and control, especially in the settings of multi-agent systems, game theory, and robust control; with applications in (networked) cyber-physical systems including smart grid and electricity markets, robotics, and epidemic control.", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Kaiqing Zhang', 'organization': 'Massachusetts Institute of Technology'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_bio = target_person_basic_info['bio']\nfinal_result = target_person_bio\n", "result": "My research interests lie in the intersection of learning and control, especially in the settings of multi-agent systems, game theory, and robust control; with applications in (networked) cyber-physical systems including smart grid and electricity markets, robotics, and epidemic control.", "exe_time": 1.8085339069366455}
{"Query_en": "What is the educational background of Hanzhi Wang at School of Information, Renmin University of China?", "Answer": "second-year Ph.D. student at School of Information, Renmin University of China<br>B.E. degree in Computer Science and Technology from School of Information, Renmin University of China in June 2019.", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Hanzhi Wang', 'organization': 'School of Information, Renmin University of China'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_education_experience = target_person_basic_info['education_experience']\nfinal_result = target_person_education_experience\n", "result": "second-year Ph.D. student at School of Information, Renmin University of China<br>B.E. degree in Computer Science and Technology from School of Information, Renmin University of China in June 2019.", "exe_time": 2.0213325023651123}
{"Query_en": "What is the email of Tao Yu at Department of Computer Science, Cornell University?", "Answer": "tyu@cs.cornell.edu", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Tao Yu', 'organization': 'Department of Computer Science, Cornell University'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_email = target_person_basic_info['email']\nfinal_result = target_person_email\n", "result": "tyu@cs.cornell.edu", "exe_time": 1.8118383884429932}
{"Query_en": "Is Nasrin Akhter in Decoy Selection field male or female?", "Answer": "female", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Nasrin Akhter', 'interest': 'Decoy Selection'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_gender = target_person_basic_info['gender']\nfinal_result = target_person_gender\n", "result": "female", "exe_time": 1.7720332145690918}
{"Query_en": "What is the title of Peng Cui in Social Network field?", "Answer": "Associate Professor", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Peng Cui', 'interest': 'Social Network'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_position = target_person_basic_info['position']\nfinal_result = target_person_position\n", "result": "Associate Professor", "exe_time": 1.7499580383300781}
{"Query_en": "What is the introduction of Bruno Ribeiro in Random Walk field?", "Answer": "My central research interest is the principled measurement, analysis, and mining of large-scale complex social and communication networks. Networks are the natural framework of many of todays highest impact computing applications: online social networking, Web search, product recommendations, mobile ad-hoc networking, and online dating are just a few examples. My past and current research efforts coalesce into my long-term goal of developing measurement tools and explanatory and predictive models that can measure, explain, forecast, and enhance networked systems where entities interact and evolve in complex ways.", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Bruno Ribeiro', 'interest': 'Random Walk'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_bio = target_person_basic_info['bio']\nfinal_result = target_person_bio\n", "result": "My central research interest is the principled measurement, analysis, and mining of large-scale complex social and communication networks. Networks are the natural framework of many of todays highest impact computing applications: online social networking, Web search, product recommendations, mobile ad-hoc networking, and online dating are just a few examples. My past and current research efforts coalesce into my long-term goal of developing measurement tools and explanatory and predictive models that can measure, explain, forecast, and enhance networked systems where entities interact and evolve in complex ways.", "exe_time": 1.753066062927246}
{"Query_en": "What is the educational background of David W. Romero in Divisive Primaries field?", "Answer": "Vrije Universiteit Amsterdam (VU Amsterdam)\nDoctor of Philosophy - PhD, Efficient Deep Learning\nNov 2018 - Jul 2023\n\nMSc. Computational Engineering Sciences\nTechnische Universität Berlin / Berlin, DE\nOctober 2016 – October 2018\n\nBSc. Mechatronics Engineering (5-yrs degree)\nUniversidad Nacional de Colombia / Bogotá, CO\nFebruary 2010 – June 2016\n\nExchange Year in Mechatronics Engineering\nGottfried Wilhelm Leibniz Universität Hannover / Hannover, DE\nOctober 2014 – August 2015", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'David W. Romero', 'interest': 'Divisive Primaries'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_education_experience = target_person_basic_info['education_experience']\nfinal_result = target_person_education_experience\n", "result": "Vrije Universiteit Amsterdam (VU Amsterdam)\nDoctor of Philosophy - PhD, Efficient Deep Learning\nNov 2018 - Jul 2023\n\nMSc. Computational Engineering Sciences\nTechnische Universität Berlin / Berlin, DE\nOctober 2016 – October 2018\n\nBSc. Mechatronics Engineering (5-yrs degree)\nUniversidad Nacional de Colombia / Bogotá, CO\nFebruary 2010 – June 2016\n\nExchange Year in Mechatronics Engineering\nGottfried Wilhelm Leibniz Universität Hannover / Hannover, DE\nOctober 2014 – August 2015", "exe_time": 1.9818317890167236}
{"Query_en": "What is the email of Yang Li in Generative Adversarial Networks field?", "Answer": "yanglily@sjtu.edu.cn", "route": "searchPerson -> getPersonBasicInfo", "code": "info = {'name': 'Yang Li', 'interest': 'Generative Adversarial Networks'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_basic_info = getPersonBasicInfo(person_id = target_person_id)\ntarget_person_email = target_person_basic_info['email']\nfinal_result = target_person_email\n", "result": "yanglily@sjtu.edu.cn", "exe_time": 1.7775120735168457}
{"Query_en": "Who among the collaborators of Ling Yan at Machine Intelligence Technology Lab, Alibaba Group are researching in Budget Allocation field?", "Answer": ["Huan Xu"], "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Ling Yan', 'organization': 'Machine Intelligence Technology Lab, Alibaba Group'}\nname = info['name']\norganization = info['organization']\ntarget_interest = info['interest']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ncoauthor_list = getCoauthors(person_id = target_person_id)\n\ntarget_coauthor_names = []\nfor coauthor in coauthor_list:\n    coauthor_id = coauthor['person_id']\n    coauthor_interests_list = getPersonInterest(person_id = coauthor_id)\n    if target_interest in coauthor_interests_list:\n        target_coauthor_names.append(coauthor['name'])\n\nfinal_result = target_coauthor_names\n", "result": "exe error", "exe_time": 2.7705678939819336}
{"Query_en": "Who has the highest citation count among the collaborators of Victor Amelkin at University of Pennsylvania, Philadelphia?", "Answer": "Ambuj K. Singh", "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Victor Amelkin', 'organization': 'University of Pennsylvania, Philadelphia'}\nname = info['name']\norganization = info['organization']\n\n# get specific person's information\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\n\n# get coauthors of the specific person\ncoauthors_list = getCoauthors(person_id = target_person_id)\n\n# get information of coauthors and find the one with highest citation\nmax_citation = 0\nmax_citation_author_name = ''\n\nfor coauthor in coauthors_list:\n    coauthor_name = coauthor['name']\n    coauthor_info_list = searchPerson(name = coauthor_name)\n    coauthor_info = coauthor_info_list[0]\n    coauthor_citation = coauthor_info['num_citation']\n    if coauthor_citation > max_citation:\n        max_citation = coauthor_citation\n        max_citation_author_name = coauthor_info['name']\n\nfinal_result = max_citation_author_name\n", "result": "Ambuj K. Singh", "exe_time": 3.6146938800811768}
{"Query_en": "Who has the most published papers among the collaborators of Andy Hopper at Department of Computer Science and Technology, University of Cambridge?", "Answer": "Andrew Rice", "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Andy Hopper', 'organization': 'Department of Computer Science and Technology, University of Cambridge'}\nname = info['name']\norganization = info['organization']\n\n# Search the person\nperson_list = searchPerson(name=name, organization=organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\n\n# Get the coauthors\ncoauthors_list = getCoauthors(person_id=target_person_id)\n\n# get information of coauthors and find the one with highest citation\nmax_pubs = 0\nmax_pubs_author_name = ''\n\n# Iterate each coauthor and calculate his/her publication number\nfor coauthor in coauthors_list:\n    coauthor_name = coauthor['name']\n    coauthor_info_list = searchPerson(name = coauthor_name)\n    coauthor_info = coauthor_info_list[0]\n    coauthor_pubs = coauthor_info['num_pubs']\n    if coauthor_pubs > max_pubs:\n        max_pubs = coauthor_pubs\n        max_pubs_author_name = coauthor_info['name']\n\nfinal_result = max_pubs_author_name\n", "result": "Andrew Rice", "exe_time": 3.7755966186523438}
{"Query_en": "Who among the collaborators of Irina Rudenko in Neural Networks field are at Yandexinstitution?", "Answer": ["Dmitry Solomentsev", "Ivan Bushmarinov", "Alexander Ganshin", "Vladimir Ivashkin", "Vadim Lebedev"], "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Irina Rudenko', 'interest': 'Neural Networks'}\nname = info['name']\ninterest = info['interest']\ntarget_organization = info['organization']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ncoauthor_list = getCoauthors(person_id = target_person_id)\n\ntarget_coauthor_names = []\nfor coauthor in coauthor_list:\n    coauthor_name = coauthor['name']\n    coauthor_list = searchPerson(name = coauthor_name)\n    coauthor_info = coauthor_list[0]\n    coauthor_organization = coauthor_info['organization']\n    if coauthor_organization == target_organization:\n        target_coauthor_names.append(coauthor['name'])\n\nfinal_result = target_coauthor_names\n", "result": "exe error", "exe_time": 2.9519128799438477}
{"Query_en": "Who has the highest citation count among the collaborators of Sagar Samtani in Internet Of Things field?", "Answer": "Murat Kantarcioglu", "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Sagar Samtani', 'interest': 'Internet Of Things'}\nname = info['name']\ninterest = info['interest']\n\n# get specific person's information\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\n\n# get coauthors of the specific person\ncoauthors_list = getCoauthors(person_id = target_person_id)\n\n# get information of coauthors and find the one with highest citation\nmax_citation = 0\nmax_citation_author_name = ''\n\nfor coauthor in coauthors_list:\n    coauthor_name = coauthor['name']\n    coauthor_info_list = searchPerson(name = coauthor_name)\n    coauthor_info = coauthor_info_list[0]\n    coauthor_citation = coauthor_info['num_citation']\n    if coauthor_citation > max_citation:\n        max_citation = coauthor_citation\n        max_citation_author_name = coauthor_info['name']\n\nfinal_result = max_citation_author_name\n", "result": "Murat Kantarcioglu", "exe_time": 3.57283091545105}
{"Query_en": "Who has the most published papers among the collaborators of Reid McIlroy Young in Burst Analysis field?", "Answer": "Jon M. Kleinberg", "route": "searchPerson -> getCoauthors -> searchPerson", "code": "info = {'name': 'Reid McIlroy Young', 'interest': 'Burst Analysis'}\nname = info['name']\ninterest = info['interest']\n\n# get specific person's information\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\n\n# Get the coauthors\ncoauthors_list = getCoauthors(person_id=target_person_id)\n\n# get information of coauthors and find the one with highest citation\nmax_pubs = 0\nmax_pubs_author_name = ''\n\n# Iterate each coauthor and calculate his/her publication number\nfor coauthor in coauthors_list:\n    coauthor_name = coauthor['name']\n    coauthor_info_list = searchPerson(name = coauthor_name)\n    coauthor_info = coauthor_info_list[0]\n    coauthor_pubs = coauthor_info['num_pubs']\n    if coauthor_pubs > max_pubs:\n        max_pubs = coauthor_pubs\n        max_pubs_author_name = coauthor_info['name']\n\nfinal_result = max_pubs_author_name\n", "result": "Jon M. Kleinberg", "exe_time": 3.709930896759033}
{"Query_en": "Who are the collaborators of the collaborators of Weishi Shi at Rochester Institute of Technology?", "Answer": ["Chang-Tien Lu", "Naren Ramakrishnan", "Liang Zhao", "Baojian Zhou", "Jianxin Li", "Xintao Wu", "Xuchao Zhang", "Jieping Ye", "Krishnateja Killamsetty", "Fang Jin", "Xindong Wu", "Yiming Ying", "Wei Wang"], "route": "searchPerson -> getCoauthors -> getCoauthors", "code": "info = {'name': 'Weishi Shi', 'organization': 'Rochester Institute of Technology'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ncoauthors1_list = getCoauthors(person_id = target_person_id)\n\ncoauthors2_list = []\nfor coauthor in coauthors1_list:\n    coauthors2_list.extend(getCoauthors(person_id = coauthor['person_id']))\n\ncoauthors2_names = [coauthor['name'] for coauthor in coauthors2_list]\n\nfinal_result = coauthors2_names\n", "result": ["Chang-Tien Lu", "Naren Ramakrishnan", "Liang Zhao", "Baojian Zhou", "Jianxin Li", "Xintao Wu", "Xuchao Zhang", "Jieping Ye", "Krishnateja Killamsetty", "Fang Jin", "Xindong Wu", "Yiming Ying", "Wei Wang"], "exe_time": 2.489366054534912}
{"Query_en": "Who are the collaborators of the collaborators of Christopher Leckie in Anomaly Detection field?", "Answer": ["Christopher Leckie", "James Bailey", "Laurence Park", "Rui Zhang", "Wei Liu", "Zeyi Wen", "Dacheng Tao", "Ramamohanarao Kotagiri", "Christopher Leckie", "Wei Liu", "Jian Pei", "Michael E. Houle", "Andrey Kan", "Hanxun Huang (Curtis)", "Sanjay Chawla", "Christopher Leckie", "Christos Faloutsos", "James Bailey", "Xin Luna Dong", "Tong Zhao", "Chenwei Zhang", "Yuning Mao", "Jiawei Han", "Wei Liu", "Ramamohanarao Kotagiri", "Namyong Park", "Yaqing Wang", "Giannis Karamanolakis", "Andrew Mccallum", "Haw-Shiuan Chang", "Sanjay Chawla", "James Bailey", "Ramamohanarao Kotagiri", "Christopher Leckie", "Dacheng Tao", "Longbing Cao", "Yu Zheng", "Zhibin Li", "Jian Zhang", "Liming Zhu", "Linsey Pang", "Andrey Kan", "Shoujin Wang", "Ramamohanarao Kotagiri", "Christopher Leckie", "Svetha Venkatesh", "James Bailey", "Jiawei Han", "Ke Wang", "Xuemin Lin", "Philip S. Yu", "Lingyang Chu", "Linjun Shou", "Peng Cui", "Yufei Tao", "Yu Yang", "Jianyong Wang", "Enhong Chen", "Heng Huang", "Aidong Zhang", "James Bailey", "Raymond Chi-Wing Wong", "Hang Li", "Wenwu Zhu", "Wenjie Zhang", "Xindong Wu", "Jiannan Wang", "Jun Luo", "Longbing Cao", "Yixin Chen", "Ziwei Zhang", "Lingfei Wu (Teddy)", "Christopher Leckie"], "route": "searchPerson -> getCoauthors -> getCoauthors", "code": "info = {'name': 'Christopher Leckie', 'interest': 'Anomaly Detection'}\ninterest = info['interest']\nname = info['name']\n\ninterest_person_list = searchPerson(interest = interest)\ninterest_person_id_list = [person['person_id'] for person in interest_person_list]\ntarget_list = []\nfor interest_person_id in interest_person_id_list:\n    coauthors = getCoauthors(person_id = interest_person_id)\n    coauthor_name_list = [coauthor['name'] for coauthor in coauthors]\n    if name in coauthor_name_list:\n        target_list.append(getPersonBasicInfo(person_id=interest_person_id)['name'])\nfinal_result = target_list\n", "result": [], "exe_time": 2.492259979248047}
{"Query_en": "What is the abstract of the representative work of Runlong Yu at School of Computer Science and Technology, University of Science and Technology of China?", "Answer": "As users implicitly express their preferences to items on many real-world applications, the implicit feedback based collaborative filtering has attracted much attention in recent years. Pairwise methods have shown state-of-the-art solutions for dealing with the implicit feedback, with the assumption that users prefer the observed items to the unobserved items. However, for each user, the huge unobserved items are not equal to represent her preference. In this paper, we propose a Multiple Pairwise Ranking (MPR) approach, which relaxes the simple pairwise preference assumption in previous works by further tapping the connections among items with multiple pairwise ranking criteria. Specifically, we exploit the preference difference among multiple pairs of items by dividing the unobserved items into different parts. Empirical studies show that our algorithms outperform the state-of-the-art methods on real-world datasets.\n\n", "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Runlong Yu', 'organization': 'School of Computer Science and Technology, University of Science and Technology of China'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_abstract = target_publication_info['abstract']\nfinal_result = target_abstract\n", "result": "As users implicitly express their preferences to items on many real-world applications, the implicit feedback based collaborative filtering has attracted much attention in recent years. Pairwise methods have shown state-of-the-art solutions for dealing with the implicit feedback, with the assumption that users prefer the observed items to the unobserved items. However, for each user, the huge unobserved items are not equal to represent her preference. In this paper, we propose a Multiple Pairwise Ranking (MPR) approach, which relaxes the simple pairwise preference assumption in previous works by further tapping the connections among items with multiple pairwise ranking criteria. Specifically, we exploit the preference difference among multiple pairs of items by dividing the unobserved items into different parts. Empirical studies show that our algorithms outperform the state-of-the-art methods on real-world datasets.\n\n", "exe_time": 2.5051140785217285}
{"Query_en": "What is the PDF link of the representative work of Aman Dalmia at Wadhwani Institute for Artificial Intelligence?", "Answer": "https://cz5waila03cyo0tux1owpyofgoryroob.oss-cn-beijing.aliyuncs.com/A5/D2/FF/A5D2FF445FD8BDA1EAAEF296AC915066.pdf", "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Aman Dalmia', 'organization': 'Wadhwani Institute for Artificial Intelligence'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_pdf = target_publication_info['pdf_link']\nfinal_result = target_pdf\n", "result": "https://cz5waila03cyo0tux1owpyofgoryroob.oss-cn-beijing.aliyuncs.com/A5/D2/FF/A5D2FF445FD8BDA1EAAEF296AC915066.pdf", "exe_time": 2.5067522525787354}
{"Query_en": "Which journal or conference included the representative work of Mengyue Yang at University College London?", "Answer": {"info": {"name": "2021 IEEE/CVF CONFERENCE ON COMPUTER VISION AND PATTERN RECOGNITION, CVPR 2021"}}, "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Mengyue Yang', 'organization': 'University College London'}\nname = info['name']\norganization = info['organization']\n\nperson_list = searchPerson(name = name, organization = organization)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_venue = target_publication_info['venue']\nfinal_result = target_venue\n", "result": {"info": {"name": "2021 IEEE/CVF CONFERENCE ON COMPUTER VISION AND PATTERN RECOGNITION, CVPR 2021"}}, "exe_time": 2.398496150970459}
{"Query_en": "What is the abstract of the representative work of Soroosh Sorooshian in Remote Sensing field?", "Answer": "The successful application of a conceptual rainfall-runoff (CRR) model depends on how well it is calibrated. Despite the popularity of CRR models, reports in the literature indicate that it is typically difficult, if not impossible, to obtain unique optimal values for their parameters using automatic calibration methods. Unless the best set of parameters associated with a given calibration data set can be found, it is difficult to determine how sensitive the parameter estimates (and hence the model forecasts) are to factors such as input and output data error, model error, quantity and quality of data, objective function used, and so on. Results are presented that establish clearly the nature of the multiple optima problem for the research CRR model SIXPAR. These results suggest that the CRR model optimization problem is more difficult than had been previously thought and that currently used local search procedures have a very low probability of successfully finding the optimal parameter sets. Next, the performance of three existing global search procedures are evaluated on the model SIXPAR. Finally, a powerful new global optimization procedure is presented, entitled the shuffled complex evolution (SCE-UA) method, which was able to consistently locate the global optimum of the SIXPAR model, and appears to be capable of efficiently and effectively solving the CRR model optimization problem.", "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Soroosh Sorooshian', 'interest': 'Remote Sensing'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_abstract = target_publication_info['abstract']\nfinal_result = target_abstract\n", "result": "The successful application of a conceptual rainfall-runoff (CRR) model depends on how well it is calibrated. Despite the popularity of CRR models, reports in the literature indicate that it is typically difficult, if not impossible, to obtain unique optimal values for their parameters using automatic calibration methods. Unless the best set of parameters associated with a given calibration data set can be found, it is difficult to determine how sensitive the parameter estimates (and hence the model forecasts) are to factors such as input and output data error, model error, quantity and quality of data, objective function used, and so on. Results are presented that establish clearly the nature of the multiple optima problem for the research CRR model SIXPAR. These results suggest that the CRR model optimization problem is more difficult than had been previously thought and that currently used local search procedures have a very low probability of successfully finding the optimal parameter sets. Next, the performance of three existing global search procedures are evaluated on the model SIXPAR. Finally, a powerful new global optimization procedure is presented, entitled the shuffled complex evolution (SCE-UA) method, which was able to consistently locate the global optimum of the SIXPAR model, and appears to be capable of efficiently and effectively solving the CRR model optimization problem.", "exe_time": 2.424649715423584}
{"Query_en": "What is the PDF link of the representative work of Wenjie Wang in User Health Profiling field?", "Answer": "https://static.aminer.cn/upload/pdf/918/467/128/5edf5dd891e011bc656ded70_0.pdf", "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Wenjie Wang', 'interest': 'User Health Profiling'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_pdf = target_publication_info['pdf_link']\nfinal_result = target_pdf\n", "result": "https://static.aminer.cn/upload/pdf/918/467/128/5edf5dd891e011bc656ded70_0.pdf", "exe_time": 2.4275100231170654}
{"Query_en": "Which journal or conference included the representative work of Michal Aharon in Sparse Representation field?", "Answer": {"id": "555036f27cea80f954168664", "info": {"name": "IEEE Transactions on Image Processing"}, "issue": "12", "type": 0, "volume": "15"}, "route": "searchPerson -> getPersonPubs -> getPublication", "code": "info = {'name': 'Michal Aharon', 'interest': 'Sparse Representation'}\nname = info['name']\ninterest = info['interest']\n\nperson_list = searchPerson(name = name, interest = interest)\ntarget_person_info = person_list[0]\ntarget_person_id = target_person_info['person_id']\ntarget_person_pubs = getPersonPubs(person_id = target_person_id)\ntarget_publication_dict = target_person_pubs[0]\ntarget_publication_id = target_publication_dict['pub_id']\ntarget_publication_info = getPublication(pub_id = target_publication_id)\ntarget_venue = target_publication_info['venue']\nfinal_result = target_venue\n", "result": {"id": "555036f27cea80f954168664", "info": {"name": "IEEE Transactions on Image Processing"}, "issue": "12", "type": 0, "volume": "15"}, "exe_time": 2.391404390335083}
